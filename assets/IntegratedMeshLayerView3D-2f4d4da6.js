import{b0 as a,aH as o,aC as s,aJ as r,aK as e,b1 as p,aM as n}from"./index-0199b717.js";import{x as m}from"./I3SMeshView3D-6f548258.js";import{n as l}from"./LayerView3D-37676199.js";import{d}from"./LayerView-a0977cc5.js";import"./I3SOverrides-2ae274f6.js";import"./I3SNode-578bf5fe.js";import"./meshFeatureSet-a13fd090.js";import"./MeshGeoreferencedRelativeVertexSpace-1e75ad47.js";import"./MeshLocalVertexSpace-1b5af9eb.js";import"./georeference-d7c2d407.js";import"./External-c7058636.js";import"./FeatureLayerView3D-491e1beb.js";import"./FeatureLayerViewBase3D-17b907f9.js";import"./FeatureLikeLayerView3D-b1bdacd2.js";import"./dehydratedFeatureComparison-99482a2b.js";import"./queryForSymbologySnapping-06aa6620.js";import"./elevationInfoUtils-5cd9d27e.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-df225fb7.js";import"./optimizedFeatureQueryEngineAdapter-fb0f5985.js";import"./centroid-3dcadaf5.js";import"./PooledRBush-46c91161.js";import"./quickselect-08f30851.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-25cd666d.js";import"./normalizeUtils-30f603dc.js";import"./normalizeUtilsCommon-d91de345.js";import"./WhereClause-e2c9f470.js";import"./executionError-e8d36121.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-d7352455.js";import"./generateRendererUtils-9a953fca.js";import"./FeatureStore-03e4c7a5.js";import"./BoundsStore-5abd2f82.js";import"./projectExtentUtils-36315f43.js";import"./query-226efcbe.js";import"./pbfQueryUtils-dc012b8b.js";import"./pbf-62deeddb.js";import"./EventedSet-3977ef56.js";import"./RefreshableLayerView-8347ec95.js";import"./SceneModification-08fc7c84.js";import"./SceneLayerWorker-541768aa.js";const h=.2;let t=class extends m(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(p)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([n("esri.views.3d.layers.SceneLayerView3D")],t);const it=t;export{it as default};
