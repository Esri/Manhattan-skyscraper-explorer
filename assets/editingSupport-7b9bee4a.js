import{au as w,av as A,aw as I,ax as v,ai as i,ay as $,az as g,ae as E,aA as c,aB as S,aC as R,aD as O,aE as k}from"./index-9e6e60fd.js";import{b as L}from"./normalizeUtils-510edbbd.js";import"./normalizeUtilsCommon-36324fe0.js";function b(e){return e&&e.applyEdits!=null}function U(e){return typeof e=="object"&&e!=null&&"objectId"in e&&!!e.objectId}function M(e){return e.every(U)}function j(e){return typeof e=="object"&&e!=null&&"globalId"in e&&!!e.globalId}function Z(e){return e.every(j)}async function H(e,t,a,d={}){let s;if(w(e)&&e.url)s=A(e.url,e.layerId,d.returnServiceEditsOption==="original-and-current-features");else{s=I(),s.promise.then(l=>{(l.addedFeatures.length||l.updatedFeatures.length||l.deletedFeatures.length||l.addedAttachments.length||l.updatedAttachments.length||l.deletedAttachments.length)&&e.emit("edits",l)});const n={result:s.promise};e.emit("apply-edits",n)}try{const{results:n,edits:l}=await B(e,t,a,d),o=p=>p.filter(u=>!u.error).map(v),r={edits:l,addedFeatures:o(n.addFeatureResults),updatedFeatures:o(n.updateFeatureResults),deletedFeatures:o(n.deleteFeatureResults),addedAttachments:o(n.addAttachmentResults),updatedAttachments:o(n.updateAttachmentResults),deletedAttachments:o(n.deleteAttachmentResults),exceededTransferLimit:!1};return n.editedFeatureResults?.length&&(r.editedFeatures=n.editedFeatureResults),s.resolve(r),n}catch(n){throw s.reject(n),n}}async function B(e,t,a,d){if(await e.load(),!b(t))throw new i(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!$(e))throw new i(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:s,options:n}=await G(e,a,d);return s.addFeatures?.length||s.updateFeatures?.length||s.deleteFeatures?.length||s.addAttachments?.length||s.updateAttachments?.length||s.deleteAttachments?.length?{edits:s,results:await t.applyEdits(s,n)}:{edits:s,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}async function G(e,t,a){const d=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),s=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),n=e.infoFor3D!=null;if(!t||!d&&!s)throw new i(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");const l=g(e);if(!l.data.isVersioned&&a?.gdbVersion)throw new i(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!l.editing.supportsRollbackOnFailure&&a?.rollbackOnFailureEnabled)throw new i(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!l.editing.supportsGlobalId&&a?.globalIdUsed)throw new i(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!l.editing.supportsGlobalId&&s)throw new i(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if(!a?.globalIdUsed&&s)throw new i(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const o={...a};if(o.rollbackOnFailureEnabled!=null||l.editing.supportsRollbackOnFailure||(o.rollbackOnFailureEnabled=!0),o.rollbackOnFailureEnabled||o.returnServiceEditsOption!=="original-and-current-features"||(o.rollbackOnFailureEnabled===!1&&E.getLogger("esri.layers.graphics.editingSupport").warn(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true, but 'rollBackOnFailure' was set to false. 'rollBackOnFailure' has been overwrritten and set to true."),o.rollbackOnFailureEnabled=!0),!l.editing.supportsReturnServiceEditsInSourceSpatialReference&&o.returnServiceEditsInSourceSR)throw new i(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(o.returnServiceEditsInSourceSR&&o.returnServiceEditsOption!=="original-and-current-features")throw new i(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsInSourceSR' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const r={...t};if(r.addFeatures=t&&c.isCollection(t.addFeatures)?t.addFeatures.toArray():r.addFeatures||[],r.updateFeatures=t&&c.isCollection(t.updateFeatures)?t.updateFeatures.toArray():r.updateFeatures||[],r.deleteFeatures=t&&c.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():r.deleteFeatures||[],r.addFeatures.length&&!l.operations.supportsAdd)throw new i(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(r.updateFeatures.length&&!l.operations.supportsUpdate)throw new i(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(r.deleteFeatures.length&&!l.operations.supportsDelete)throw new i(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");r.addAttachments=r.addAttachments||[],r.updateAttachments=r.updateAttachments||[],r.deleteAttachments=r.deleteAttachments||[],r.addFeatures=r.addFeatures.map(m),r.updateFeatures=r.updateFeatures.map(m),r.addAssetFeatures=[];const p=a?.globalIdUsed||n;return r.addFeatures.forEach(u=>W(u,e,p)),r.updateFeatures.forEach(u=>T(u,e,p)),r.deleteFeatures.forEach(u=>D(u,e,p)),r.addAttachments.forEach(u=>y(u,e)),r.updateAttachments.forEach(u=>y(u,e)),n&&await V(r,e),{edits:await C(r),options:o}}function h(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new i(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new i(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&e.geometry!=null){if(e.geometry.hasZ&&t.capabilities?.data.supportsZ===!1)throw new i(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&t.capabilities?.data.supportsM===!1)throw new i(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function F(e,t){if("geometry"in e&&e.geometry?.type==="mesh"){const{geometry:a}=e;if(a.vertexSpace.isGeoreferenced)throw new i(`${t.type}-layer:georeferenced-mesh-unsupported`,"Uploading georeferenced meshes to a layer is not supported.")}}function W(e,t,a){h(e,t,a),F(e,t)}function D(e,t,a){h(e,t,a)}function T(e,t,a){h(e,t,a),F(e,t);const d=g(t);if("geometry"in e&&e.geometry!=null&&!d?.editing.supportsGeometryUpdate)throw new i(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}function y(e,t){const{feature:a,attachment:d}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new i(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new i(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!d.globalId)throw new i(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!d.data&&!d.uploadId)throw new i(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(d.data instanceof File&&d.data.name)&&!d.name)throw new i(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities?.editing.supportsUploadWithItemId&&d.uploadId)throw new i(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if(typeof d.data=="string"){const s=S(d.data);if(s&&!s.isBase64)throw new i(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}async function C(e){const t=e.addFeatures??[],a=e.updateFeatures??[],d=t.concat(a).map(o=>o.geometry),s=await L(d),n=t.length,l=a.length;return s.slice(0,n).forEach((o,r)=>t[r].geometry=o),s.slice(n,n+l).forEach((o,r)=>a[r].geometry=o),e}function m(e){const t=new R;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}async function V(e,t){if(t.infoFor3D==null)return;const{infoFor3D:a}=t,d=O("model/gltf-binary",a.supportedFormats)??k("glb",a.supportedFormats);if(!(d&&a.editFormats.includes(d)))throw new i(`${t.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");e.addAssetFeatures??(e.addAssetFeatures=[]);const{addAssetFeatures:s}=e;for(const n of e.addFeatures??[])f(n)&&s.push(n);for(const n of e.updateFeatures??[])f(n)&&s.push(n)}function f(e){return e?.geometry?.type==="mesh"}function J(e,t,a,d){if(!b(t))throw new i(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!t.uploadAssets)throw new i(`${e.type}-layer:no-asset-upload-support`,"Layer source does not support uploadAssets capability",{layer:e});return t.uploadAssets(a,d)}export{H as applyEdits,Z as isFeatureIdentifierArrayWithGlobalId,M as isFeatureIdentifierArrayWithObjectId,j as isFeatureIdentifierWithGlobalId,U as isFeatureIdentifierWithObjectId,J as uploadAssets};
