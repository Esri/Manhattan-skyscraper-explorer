import{aX as a,ag as o,az as s,ai as r,aj as e,aY as p,al as n}from"./index-112c244d.js";import{x as m}from"./I3SMeshView3D-e17144a9.js";import{n as l}from"./LayerView3D-10a2ef73.js";import{d}from"./LayerView-ec7266a0.js";import"./I3SOverrides-8589fc40.js";import"./I3SNode-b8898742.js";import"./meshFeatureSet-9d8f7444.js";import"./MeshGeoreferencedRelativeVertexSpace-0d2c6219.js";import"./MeshLocalVertexSpace-243c3bcc.js";import"./georeference-9b495fe0.js";import"./External-17ec106a.js";import"./FeatureLayerView3D-70619285.js";import"./FeatureLayerViewBase3D-91156a31.js";import"./FeatureLikeLayerView3D-9cb1cee8.js";import"./dehydratedFeatureComparison-9908f9d9.js";import"./queryForSymbologySnapping-3f152c5f.js";import"./elevationInfoUtils-92bce67b.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-119da5ff.js";import"./optimizedFeatureQueryEngineAdapter-a3b2ad14.js";import"./centroid-3dcadaf5.js";import"./PooledRBush-f65c099f.js";import"./quickselect-89073317.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-9560ee9b.js";import"./normalizeUtils-ca47990d.js";import"./normalizeUtilsCommon-448ddeb2.js";import"./WhereClause-fb3d85c4.js";import"./executionError-e8d36121.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-86593ea2.js";import"./generateRendererUtils-455ff246.js";import"./FeatureStore-9e22cc1d.js";import"./BoundsStore-8a888707.js";import"./projectExtentUtils-4e67eae2.js";import"./query-f938b96a.js";import"./pbfQueryUtils-4859e776.js";import"./pbf-482f6762.js";import"./EventedSet-b5ac1dc6.js";import"./RefreshableLayerView-a3a03c2d.js";import"./SceneModification-4a6d4ad5.js";import"./SceneLayerWorker-f0abbfb0.js";const h=.2;let t=class extends m(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(p)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([n("esri.views.3d.layers.SceneLayerView3D")],t);const it=t;export{it as default};
