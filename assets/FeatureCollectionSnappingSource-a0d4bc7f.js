import{aP as f,aZ as u,aH as c,b8 as b,bn as s,aJ as r,aK as a,aM as E,f5 as F}from"./index-9e6e60fd.js";import{m as V}from"./elevationInfoUtils-2ae63ad5.js";import{E as C,b as D}from"./DimensionAnalysisView3D-ee5a8c61.js";import{i as $,o as A}from"./queryEngineUtils-4def6f0d.js";import{i as h,r as I,n as m}from"./symbologySnappingCandidates-886d637a.js";import"./LineVisualElement-50cc6889.js";import"./LengthDimension-c327a5a3.js";import"./Segment-1bf43872.js";import"./unitFormatUtils-735bd37b.js";import"./analysisViewUtils-5c278670.js";import"./ImageMaterial-e61aaffd.js";import"./Factory-ec516068.js";import"./RightAngleQuadVisualElement-d2c9c7f2.js";import"./VisualElementResources-b8a49c00.js";import"./PointVisualElement-4d9a6ae3.js";import"./EditGeometryOperations-40bb9baf.js";import"./dehydratedFeatureComparison-1c2b81bc.js";import"./VertexSnappingCandidate-f2137ba0.js";let n=class extends f{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="subtype-group")return h();const o=async(p,l)=>(await F(e.whenLayerView(t),l)).elevationAlignPointsInFeatures(p,l);return h(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:o,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return I(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return e!=null&&e.type==="3d"&&t.type!=="subtype-group"?m(this._symbologySnappingSupported,async(i,o)=>{const p=await e.whenLayerView(t);return s(o),p.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},o)}):m()}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="subtype-group"&&(e.whenLayerView(t).then(i=>this._layerView3D=i),this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{const{elevationInfo:o}=t;V(i,o)&&this._snappingElevationAligner.notifyElevationSourceChange()}),u(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),c),u(()=>this._layerView3D!=null?this._layerView3D.processor?.renderer:null,()=>this._symbologySnappingFetcher.notifySymbologyChange(),c),b(()=>this._layerView3D?.layer,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())]))}constructor(e){super(e),this.view=null,this._layerView3D=null}refresh(){}async fetchCandidates(e,t){const{layer:i}=this.layerSource,o=i.source;if(!o?.querySnapping)return[];const p=C(i),l=D(e,this.view?.type??"2d",p),v=await o.querySnapping(l,{signal:t});s(t);const y=await this._snappingElevationAligner.alignCandidates(v.candidates,t);s(t);const g=await this._symbologySnappingFetcher.fetch(y,t);s(t);const d=g.length===0?y:[...y,...g],S=this._snappingElevationFilter.filter(l,d),w=this._getGroundElevation;return S.map(_=>$(_,w))}get _getGroundElevation(){return A(this.view)}};r([a({constructOnly:!0})],n.prototype,"layerSource",void 0),r([a({constructOnly:!0})],n.prototype,"view",void 0),r([a()],n.prototype,"_snappingElevationAligner",null),r([a()],n.prototype,"_snappingElevationFilter",null),r([a()],n.prototype,"_symbologySnappingFetcher",null),r([a()],n.prototype,"_layerView3D",void 0),r([a()],n.prototype,"_symbologySnappingSupported",null),r([a()],n.prototype,"_getGroundElevation",null),n=r([E("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],n);export{n as FeatureCollectionSnappingSource};
