import{b0 as a,aH as o,aC as s,aJ as r,aK as e,b1 as p,aM as n}from"./index-f3c752ba.js";import{x as m}from"./I3SMeshView3D-98ec5239.js";import{n as l}from"./LayerView3D-2462f65d.js";import{d}from"./LayerView-7ebd6424.js";import"./I3SOverrides-60b547b3.js";import"./I3SNode-17af3b01.js";import"./meshFeatureSet-981394c6.js";import"./MeshGeoreferencedRelativeVertexSpace-7470af37.js";import"./MeshLocalVertexSpace-c23f048d.js";import"./georeference-68aba3dd.js";import"./External-c043d9cf.js";import"./FeatureLayerView3D-6499b52d.js";import"./FeatureLayerViewBase3D-d079afcf.js";import"./FeatureLikeLayerView3D-2a0b207b.js";import"./dehydratedFeatureComparison-b5316401.js";import"./queryForSymbologySnapping-580de6c3.js";import"./elevationInfoUtils-b6df21fd.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-b7d50c8d.js";import"./optimizedFeatureQueryEngineAdapter-46fe2fee.js";import"./centroid-3dcadaf5.js";import"./PooledRBush-fcd2f988.js";import"./quickselect-a3dd9b31.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-f1dffdc0.js";import"./normalizeUtils-fa52885c.js";import"./normalizeUtilsCommon-f2114a16.js";import"./WhereClause-0153ffeb.js";import"./executionError-e8d36121.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-f42e43a2.js";import"./generateRendererUtils-65cff66e.js";import"./FeatureStore-0060a525.js";import"./BoundsStore-27a00ede.js";import"./projectExtentUtils-3f9caaad.js";import"./query-cf06517b.js";import"./pbfQueryUtils-1454e414.js";import"./pbf-2677b11e.js";import"./EventedSet-a63f2281.js";import"./RefreshableLayerView-8f2044bb.js";import"./SceneModification-32cb6b6d.js";import"./SceneLayerWorker-6b8c8137.js";const h=.2;let t=class extends m(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(p)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([n("esri.views.3d.layers.SceneLayerView3D")],t);const it=t;export{it as default};
