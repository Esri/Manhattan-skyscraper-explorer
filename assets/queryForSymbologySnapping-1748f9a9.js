import{g7 as x,bD as $,g8 as z,g9 as C,bn as v,ga as q,gb as F,gc as G,gd as O}from"./index-9e6e60fd.js";import{u as E}from"./elevationInfoUtils-2ae63ad5.js";async function B(o,d,p,m,r){const{elevationProvider:g,renderCoordsHelper:c,spatialReference:b}=o,{elevationInfo:h}=d,y=z(h,!0),I=await C(y,b,r);v(r);const i=[],l=new Set,u=new Set;for(const{objectId:e,points:t}of m){const n=p(e);if(n==null){for(const s of t)i.push(s.z??0);l.add(e);continue}n.isDraped&&u.add(e);const a=n.graphic.geometry;w.setFromElevationInfo(E(a,h)),w.updateFeatureExpressionInfoContext(I,n.graphic,d),f.spatialReference=o.spatialReference;for(const{x:s,y:D,z:j}of t)f.x=s,f.y=D,f.z=j??0,q(f,g,w,c,R),i.push(R.z)}return{elevations:i,drapedObjectIds:u,failedObjectIds:l}}const w=new F,f=x(0,0,0,$.WGS84),R=new G;async function H(o,d,p){if(o==null||d.candidates.length===0)return S;const m=o.graphics3DGraphicsByObjectID??o.graphics3DGraphics,r=[],g=[],{renderer:c}=o,b=c!=null&&"arcadeRequired"in c&&c.arcadeRequired?O():null,h=async(e,{graphic:t,graphics3DSymbol:n})=>{const a=await b,s=await o.getRenderingInfoAsync(t,c,a,{signal:p});return s==null?[]:n.queryForSnapping(e,I,s,p)},{candidates:y,spatialReference:I}=d;for(let e=0;e<y.length;++e){const t=y[e],{objectId:n}=t,a=typeof n=="number"?m?.get(n):void 0;if(a==null)continue;const{graphics3DSymbol:s}=a;s.symbologySnappingSupported&&(r.push(h(t,a)),g.push(e))}if(r.length===0)return S;const i=await Promise.all(r);v(p);const l=[],u=[];for(let e=0;e<i.length;++e){const t=i[e],n=g[e];for(const a of t)l.push(a),u.push(n)}return{candidates:l,sourceCandidateIndices:u}}const S={candidates:[],sourceCandidateIndices:[]};export{B as f,H as r};
