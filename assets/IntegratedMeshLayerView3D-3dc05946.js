import{b0 as a,aH as o,aC as s,aJ as r,aK as e,b1 as p,aM as n}from"./index-2d893400.js";import{x as m}from"./I3SMeshView3D-121d9b7f.js";import{n as l}from"./LayerView3D-7b318a2d.js";import{d}from"./LayerView-5cd4aa3d.js";import"./I3SOverrides-20217db2.js";import"./I3SNode-ddb46a51.js";import"./meshFeatureSet-7411a5f6.js";import"./MeshGeoreferencedRelativeVertexSpace-7b427687.js";import"./MeshLocalVertexSpace-870cfc53.js";import"./georeference-758a866e.js";import"./External-19fd74b4.js";import"./FeatureLayerView3D-c17900e2.js";import"./FeatureLayerViewBase3D-40470b3c.js";import"./FeatureLikeLayerView3D-5fb0b67e.js";import"./dehydratedFeatureComparison-e8f5420d.js";import"./queryForSymbologySnapping-3016d381.js";import"./elevationInfoUtils-c684c74f.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-883529ae.js";import"./optimizedFeatureQueryEngineAdapter-fe267ca2.js";import"./centroid-3dcadaf5.js";import"./PooledRBush-d8438792.js";import"./quickselect-74fbe96d.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-ec91af12.js";import"./normalizeUtils-a826f9c0.js";import"./normalizeUtilsCommon-9f860a47.js";import"./WhereClause-7c1ab4ec.js";import"./executionError-e8d36121.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-3ede13ce.js";import"./generateRendererUtils-cb2a003c.js";import"./FeatureStore-644b0e31.js";import"./BoundsStore-33440aa9.js";import"./projectExtentUtils-b0e32576.js";import"./query-2e00fe92.js";import"./pbfQueryUtils-2de004c2.js";import"./pbf-200b6cb5.js";import"./EventedSet-f0a10387.js";import"./RefreshableLayerView-6bd79d79.js";import"./SceneModification-26b4786d.js";import"./SceneLayerWorker-fb4583e6.js";const h=.2;let t=class extends m(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(p)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([n("esri.views.3d.layers.SceneLayerView3D")],t);const it=t;export{it as default};
