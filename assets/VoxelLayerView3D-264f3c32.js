import{ai as c,cF as W,aZ as o,aH as S,c$ as g,d0 as f,bD as x,d1 as T,d2 as E,d3 as A,d4 as M,ae as p,aJ as m,aK as b,aM as I,bx as V}from"./index-9e6e60fd.js";import{n as L}from"./LayerView3D-ee80a8b0.js";import{i as D}from"./PopupSceneLayerView-69a53dff.js";import{d as P}from"./LayerView-6c2e21e6.js";var i;(function(s){s[s.API=1]="API",s[s.VerboseAPI=2]="VerboseAPI",s[s.Error=3]="Error"})(i||(i={}));const h=V(),_=V();let d=class extends D(L(P)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){return this.layer.parsedUrl?.path??""}get wasmLayerId(){return this._wasmLayerId}initialize(){if(this._dbgFlags.add(i.Error),this.view.viewingMode!=="local")throw new c("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat?.textureFloat)throw new c("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const s=this.layer.spatialReference;if(!W(s,this.view.spatialReference))throw new c("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const e=this.layer.currentVariableId,a=this.layer.getVolume(e),l=this.layer.getVariable(e);if(a!=null&&l!=null){const r=a.dimensions[0],t=a.dimensions[1],u=a.zDimension;if(u>1){const w=a.dimensions[u],v=r.size*t.size*w.size;let y=1;switch(l.renderingFormat.type){case"Int16":case"UInt16":y=2;break;case"Int32":case"UInt32":case"Float32":y=4}this._futureMemory=y*v}}const n=this.view.addVoxelLayerViewToWasm(this).then(r=>{this._wasmLayerId=r,this._suspendedHandle=o(()=>this.suspended,t=>{const u=this.view.voxelWasm;u?.setEnabled(this,!t)},S),this.handles.add([o(()=>this.layer.renderMode,t=>this._pushRenderModeToWasm(t)),o(()=>this.layer.currentVariableId,t=>this._pushCurrentVariableIdToWasm(t)),o(()=>this.layer.getSections(),t=>this._pushSectionsToWasm(t)),o(()=>this.layer.getVariableStyles(),t=>this._pushVariableStylesToWasm(t)),o(()=>this.layer.getVolumeStyles(),t=>this._pushVolumeStylesToWasm(t)),o(()=>this.layer.enableDynamicSections,t=>this._pushEnableDynamicSectionsToWasm(t)),o(()=>this.layer.enableIsosurfaces,t=>this._pushEnableIsosurfacesToWasm(t)),o(()=>this.layer.enableSections,t=>this._pushEnableSectionsToWasm(t)),o(()=>this.layer.enableSlices,t=>this._pushEnableSlicesToWasm(t)),o(()=>this.slicePlaneEnabled,t=>this._pushAnalysisSliceToWasm(t,this.view.slicePlane)),o(()=>this.view.slicePlane,t=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,t))])}).catch(r=>{if(this.view.removeVoxelLayerViewFromWasm(this),this._wasmLayerId=-1,r===-1)throw new c("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(r===-2)throw new c("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(n)}destroy(){this.view.removeVoxelLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const s=this.view.voxelWasm;return!(this._wasmLayerId<0||s==null)&&s.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return{nodes:0,displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null}}whenGraphicBounds(s,e){const a=s.attributes["Voxel.WorldPosition"];if(a){const l=g(),n=JSON.parse(a);if(f(n,this.view.renderSpatialReference,_,this.view.spatialReference||x.WGS84))return T(l,_),Promise.resolve({boundingBox:l,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(s){this._usedMemory=s,this._futureMemory=0}captureFrustum(){const s=this.view.voxelWasm;s?.captureFrustum()}toggleFullVolumeExtentDraw(){const s=this.view.voxelWasm;s?.toggleFullVolumeExtentDraw(this)}getLayerTimes(){let s=[];const e=this.view.voxelWasm;return e!=null&&(s=e.getLayerTimes(this)),s}getCurrentLayerTimeIndex(){let s=0;const e=this.view.voxelWasm;return e!=null&&(s=e.getCurrentLayerTimeIndex(this)),s}_pushRenderModeToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setRenderMode(this,s)||this._dbg(i.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(e?"have WASM":"don't have WASM!!!")),e!=null&&e.setStaticSections(this,s)||this._dbg(i.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(e!=null?"have WASM":"don't have WASM!!!")),e!=null&&e.setCurrentVariable(this,s)||this._dbg(i.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(e?"have WASM":"don't have WASM!!!"));let a=!1;e!=null&&(a=e.setVariableStyles(this,s),a||this._dbg(i.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!"))}_accountForEnableSlices(s,e){const a=e??this.layer.enableSlices;for(let l=0;l<s.length;++l){const n=s[l];for(const r of n.slices)r.enabled=r.enabled&&a}}_pushVolumeStylesToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(e?"have WASM":"don't have WASM!!!"));let a=!1;e!=null&&(this._accountForEnableSlices(s,null),a=e.setVolumeStyles(this,s),a||this._dbg(i.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(s,e){const a=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(a?"have WASM":"don't have WASM!!!"));let l=!1;if(a!=null){if(e!=null){const n=e.origin;E(h,e.basis1,e.basis2),A(h,h),l=a.setAnalysisSlice(this,s,n,h)}else M(h,0,0,1),l=a.setAnalysisSlice(this,!1,h,h);l||this._dbg(i.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_pushEnableDynamicSectionsToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(e!=null?"have WASM":"don't have WASM!!!"));let a=!1;e!=null&&(a=e.setEnableDynamicSections(this,s),a||this._dbg(i.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!"))}_pushEnableSlicesToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(e?"have WASM":"don't have WASM!!!"));let a=!1;if(e!=null){const l=this.layer.getVolumeStyles();this._accountForEnableSlices(l,s),a=e.setVolumeStyles(this,l),a||this._dbg(i.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(e!=null?"have WASM":"don't have WASM!!!"));let a=!1;e!=null&&(a=e.setEnableIsosurfaces(this,s),a||this._dbg(i.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!"))}_pushEnableSectionsToWasm(s){const e=this.view.voxelWasm;this._dbg(i.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(e?"have WASM":"don't have WASM!!!"));let a=!1;e!=null&&(a=e.setEnableSections(this,s),a||this._dbg(i.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!"))}async whenGraphicAttributes(s,e){return s}_dbg(s,e){this._dbgFlags.has(s)&&(s===i.Error?p.getLogger(this).error(e):p.getLogger(this).warn(e))}};m([b()],d.prototype,"layer",void 0),m([b()],d.prototype,"baseUrl",null),m([b({type:Boolean})],d.prototype,"slicePlaneEnabled",void 0),d=m([I("esri.views.3d.layers.VoxelLayerView3D")],d);const U=d;export{U as default};
