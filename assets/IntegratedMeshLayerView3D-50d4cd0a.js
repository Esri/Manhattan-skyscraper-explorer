import{b0 as a,aH as o,aC as s,aJ as r,aK as e,b1 as p,aM as n}from"./index-9e6e60fd.js";import{x as m}from"./I3SMeshView3D-f644f6a9.js";import{n as l}from"./LayerView3D-ee80a8b0.js";import{d}from"./LayerView-6c2e21e6.js";import"./I3SOverrides-9f237d7b.js";import"./I3SNode-250ea88b.js";import"./meshFeatureSet-9898044c.js";import"./MeshGeoreferencedRelativeVertexSpace-ca1ac0ea.js";import"./MeshLocalVertexSpace-861457d1.js";import"./georeference-1320f6db.js";import"./External-886517ef.js";import"./FeatureLayerView3D-f9a92383.js";import"./FeatureLayerViewBase3D-0b5536ed.js";import"./FeatureLikeLayerView3D-ed799530.js";import"./dehydratedFeatureComparison-1c2b81bc.js";import"./queryForSymbologySnapping-1748f9a9.js";import"./elevationInfoUtils-2ae63ad5.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-0d6418c1.js";import"./optimizedFeatureQueryEngineAdapter-899a40ed.js";import"./centroid-3dcadaf5.js";import"./PooledRBush-067a2961.js";import"./quickselect-1a51e43c.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-32c888f9.js";import"./normalizeUtils-510edbbd.js";import"./normalizeUtilsCommon-36324fe0.js";import"./WhereClause-03170b7f.js";import"./executionError-e8d36121.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./utils-1d12355e.js";import"./generateRendererUtils-b7429cc6.js";import"./FeatureStore-9450efaa.js";import"./BoundsStore-819c597f.js";import"./projectExtentUtils-53cb6cf0.js";import"./query-e1f19ad9.js";import"./pbfQueryUtils-4d58824a.js";import"./pbf-630f7fb3.js";import"./EventedSet-2de441b5.js";import"./RefreshableLayerView-2568e7d8.js";import"./SceneModification-af106271.js";import"./SceneLayerWorker-458d3e3d.js";const h=.2;let t=class extends m(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?h:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),o),"modifications")}};r([e()],t.prototype,"layer",void 0),r([e()],t.prototype,"i3slayer",null),r([e(p)],t.prototype,"updatingProgress",void 0),r([e()],t.prototype,"updatingProgressValue",null),r([e()],t.prototype,"lodFactor",null),r([e({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([n("esri.views.3d.layers.SceneLayerView3D")],t);const it=t;export{it as default};
