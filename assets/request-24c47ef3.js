import{ai as b}from"./index-f3c752ba.js";let c;function h(n,s){let e=s.responseType;e?e!=="array-buffer"&&e!=="blob"&&e!=="json"&&e!=="native"&&e!=="native-request-init"&&e!=="text"&&(e="text"):e="json",s.responseType=e;const p=s.signal;return delete s.signal,globalThis.invokeStaticMessage("request",{url:n,options:s},{signal:p}).then(async t=>{let l,a,u,o,r;if(t.data)if(t.data instanceof ArrayBuffer){if(!(e!=="json"&&e!=="text"&&e!=="blob"||(l=new Blob([t.data]),e!=="json"&&e!=="text"||(c||(c=new FileReaderSync),o=c.readAsText(l),e!=="json")))){try{a=JSON.parse(o||null)}catch(i){const f={...i,url:n,requestOptions:s};throw new b("request:server",i.message,f)}if(a.error){const i={...a.error,url:n,requestOptions:s};throw new b("request:server",a.error.message,i)}}}else e==="native"&&(t.data.signal=p,u=await fetch(t.data.url,t.data),t.httpStatus=u.status);switch(e){case"blob":r=l;break;case"json":r=a;break;case"native":r=u;break;case"text":r=o;break;default:r=t.data}return{data:r,httpStatus:t.httpStatus,requestOptions:s,ssl:t.ssl,url:n}})}export{h as execute};
