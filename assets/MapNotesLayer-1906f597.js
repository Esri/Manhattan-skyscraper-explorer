import{es as T,eu as I,hi as $,aJ as r,aK as a,g1 as k,hj as K,aM as C,bR as E,fg as D,bG as W,eA as H,eC as L,bK as V,dv as q,dw as U,dx as Y,bD as b,aA as w,al as Q,ax as v,cG as R,hk as N,cK as S,fL as j,hl as G,b9 as P,aC as X,ai as Z,fp as ee,cF as te,aV as re,dd as oe,de as ie,df as ae,cr as x,dD as m,cu as le,c5 as ne}from"./index-f3c752ba.js";import{b as se}from"./normalizeUtils-fa52885c.js";import{n as ye}from"./objectIdUtils-967fafff.js";import"./normalizeUtilsCommon-f2114a16.js";let c=class extends T(I(E)){constructor(e){super(e),this.elevationInfo=null,this.graphics=new $,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1}destroy(){this.removeAll(),this.graphics.destroy()}add(e){return this.graphics.add(e),this}addMany(e){return this.graphics.addMany(e),this}removeAll(){return this.graphics.removeAll(),this}remove(e){this.graphics.remove(e)}removeMany(e){this.graphics.removeMany(e)}on(e,t){return super.on(e,t)}graphicChanged(e){this.emit("graphic-update",e)}};r([a({type:k})],c.prototype,"elevationInfo",void 0),r([a(K($,"graphics"))],c.prototype,"graphics",void 0),r([a({type:["show","hide"]})],c.prototype,"listMode",void 0),r([a()],c.prototype,"screenSizePerspectiveEnabled",void 0),r([a({readOnly:!0})],c.prototype,"type",void 0),r([a({constructOnly:!0})],c.prototype,"internal",void 0),c=r([C("esri.layers.GraphicsLayer")],c);const pe=c;function g(e){return e.featureCollectionType==="markup"||e.layers.some(t=>t.layerDefinition.visibilityField!=null||!_(t))}function _({layerDefinition:e,featureSet:t}){const o=e.geometryType??t.geometryType;return J.find(i=>o===i.geometryTypeJSON&&e.drawingInfo?.renderer?.symbol?.type===i.identifyingSymbol.type)}function B(){return new ne({xmin:-180,ymin:-90,xmax:180,ymax:90})}const M=new D({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),ue=new D({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let u=class extends pe{constructor(e){super(e),this.visibilityMode="inherited"}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",e=>{e.item.sourceLayer=this.layer}),this.graphics.on("after-remove",e=>{e.item.sourceLayer=null})}get fullExtent(){const e=this.layer?.spatialReference,t=this.fullBounds;return e?t==null?S(B(),e).geometry:P(t,e):null}get fullBounds(){const e=this.layer?.spatialReference;if(!e)return null;const t=R();return this.graphics.forEach(o=>{const i=o.geometry!=null?S(o.geometry,e).geometry:null;i!=null&&N(t,i.type==="point"?i:i.extent,t)}),j(t,G)?null:t}get sublayers(){return this.graphics}};r([a({readOnly:!0})],u.prototype,"fullExtent",null),r([a({readOnly:!0})],u.prototype,"fullBounds",null),r([a({readOnly:!0})],u.prototype,"sublayers",null),r([a()],u.prototype,"layer",void 0),r([a()],u.prototype,"layerId",void 0),r([a({readOnly:!0})],u.prototype,"visibilityMode",void 0),u=r([C("esri.layers.MapNotesLayer.MapNotesSublayer")],u);const J=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",id:"polygonLayer",layerId:0,title:"Polygons",identifyingSymbol:new W().toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",id:"polylineLayer",layerId:1,title:"Polylines",identifyingSymbol:new H().toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",id:"multipointLayer",layerId:2,title:"Multipoints",identifyingSymbol:new L().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"pointLayer",layerId:3,title:"Points",identifyingSymbol:new L().toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",id:"textLayer",layerId:4,title:"Text",identifyingSymbol:new V().toJSON()}];let l=class extends T(I(q(U(Y(E))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.listMode="hide-children",this.minScale=0,this.maxScale=0,this.spatialReference=b.WGS84,this.sublayers=new w(J.map(t=>new u({id:t.id,layerId:t.layerId,title:t.title,layer:this}))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited"}readCapabilities(e,t,o){return{operations:{supportsMapNotesEditing:!g(t)&&o?.origin!=="portal-item"}}}readFeatureCollections(e,t,o){if(!g(t))return null;const i=t.layers.map(s=>{const n=new Q;return n.read(s,o),n});return new w({items:i})}readLegacyfeatureCollectionJSON(e,t){return g(t)?v(t.featureCollection):null}get fullExtent(){const e=this.spatialReference,t=R();return this.sublayers!=null?this.sublayers.forEach(({fullBounds:o})=>o!=null?N(t,o,t):t,t):this.featureCollectionJSON?.layers.some(o=>o.layerDefinition.extent)&&this.featureCollectionJSON.layers.forEach(o=>{const i=S(o.layerDefinition.extent,e).geometry;i!=null&&N(t,i,t)}),j(t,G)?S(B(),e).geometry:P(t,e)}readMinScale(e,t){for(const o of t.layers)if(o.layerDefinition.minScale!=null)return o.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const o of t.layers)if(o.layerDefinition.maxScale!=null)return o.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSpatialReference(e,t){return t.layers.length?b.fromJSON(t.layers[0].layerDefinition.spatialReference):b.WGS84}readSublayers(e,t,o){if(g(t))return null;const i=[];let s=t.layers.reduce((n,y)=>Math.max(n,y.layerDefinition.id??-1),-1)+1;for(const n of t.layers){const{layerDefinition:y,featureSet:p}=n,f=y.id??s++,d=_(n);if(d!=null){const h=new u({id:d.id,title:y.name,layerId:f,layer:this,graphics:p.features.map(({geometry:O,symbol:F,attributes:A,popupInfo:z})=>X.fromJSON({attributes:A,geometry:O,symbol:F,popupTemplate:z}))});i.push(h)}}return new w(i)}writeSublayers(e,t,o,i){const{minScale:s,maxScale:n}=this;if(e==null)return;const y=e.some(d=>d.graphics.length>0);if(!this.capabilities.operations.supportsMapNotesEditing)return void(y&&i?.messages?.push(new Z("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer")));const p=[];let f=this.spatialReference.toJSON();e:for(const d of e)for(const h of d.graphics)if(h.geometry!=null){f=h.geometry.spatialReference.toJSON();break e}for(const d of J){const h=e.find(O=>d.id===O.id);this._writeMapNoteSublayer(p,h,d,s,n,f,i)}ee("featureCollection.layers",p,t)}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&(e=v(e),Object.assign(e,e.featureCollection)),super.read(e,t)}async beforeSave(){if(this.sublayers==null)return;let e=null;const t=[];for(const i of this.sublayers)for(const s of i.graphics)if(s.geometry!=null){const n=s.geometry;e?te(n.spatialReference,e)||(re(n.spatialReference,e)||oe()||await ie(),s.geometry=ae(n,e)):e=n.spatialReference,t.push(s)}const o=await se(t.map(i=>i.geometry));t.forEach((i,s)=>i.geometry=o[s])}_findSublayer(e){return this.sublayers==null?null:this.sublayers?.find(t=>t.id===e)??null}_writeMapNoteSublayer(e,t,o,i,s,n,y){const p=[];if(t!=null){for(const f of t.graphics)this._writeMapNote(p,f,o.geometryType,y);this._normalizeObjectIds(p,M),e.push({layerDefinition:{name:t.title,drawingInfo:{renderer:{type:"simple",symbol:v(o.identifyingSymbol)}},id:t.layerId,geometryType:o.geometryTypeJSON,minScale:i,maxScale:s,objectIdField:"OBJECTID",fields:[M.toJSON(),ue.toJSON()],spatialReference:n},featureSet:{features:p,geometryType:o.geometryTypeJSON}})}}_writeMapNote(e,t,o,i){if(t==null)return;const{geometry:s,symbol:n,popupTemplate:y}=t;if(s==null)return;if(s.type!==o)return void i?.messages?.push(new x("map-notes-layer:invalid-geometry-type",`Geometry "${s.type}" cannot be saved in "${o}" layer`,{graphic:t}));if(n==null)return void i?.messages?.push(new x("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t}));const p={attributes:{...t.attributes},geometry:s.toJSON(),symbol:n.toJSON()};y!=null&&(p.popupInfo=y.toJSON()),e.push(p)}_normalizeObjectIds(e,t){const o=t.name;let i=ye(o,e)+1;const s=new Set;for(const n of e){n.attributes||(n.attributes={});const{attributes:y}=n;(y[o]==null||s.has(y[o]))&&(y[o]=i++),s.add(y[o])}}};r([a({readOnly:!0})],l.prototype,"capabilities",void 0),r([m(["portal-item","web-map"],"capabilities",["layers"])],l.prototype,"readCapabilities",null),r([a({readOnly:!0})],l.prototype,"featureCollections",void 0),r([m(["web-map","portal-item"],"featureCollections",["layers"])],l.prototype,"readFeatureCollections",null),r([a({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],l.prototype,"featureCollectionJSON",void 0),r([m(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],l.prototype,"readLegacyfeatureCollectionJSON",null),r([a({readOnly:!0,json:{read:!0,write:{enabled:!0,ignoreOrigin:!0}}})],l.prototype,"featureCollectionType",void 0),r([a({readOnly:!0})],l.prototype,"fullExtent",null),r([a({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return{enabled:this.featureCollectionJSON!=null}}}}}}})],l.prototype,"legendEnabled",void 0),r([a({type:["show","hide","hide-children"]})],l.prototype,"listMode",void 0),r([a({type:Number,nonNullable:!0,json:{write:!1}})],l.prototype,"minScale",void 0),r([m(["web-map","portal-item"],"minScale",["layers"])],l.prototype,"readMinScale",null),r([a({type:Number,nonNullable:!0,json:{write:!1}})],l.prototype,"maxScale",void 0),r([m(["web-map","portal-item"],"maxScale",["layers"])],l.prototype,"readMaxScale",null),r([a({readOnly:!0})],l.prototype,"multipointLayer",null),r([a({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],l.prototype,"operationalLayerType",void 0),r([a({readOnly:!0})],l.prototype,"pointLayer",null),r([a({readOnly:!0})],l.prototype,"polygonLayer",null),r([a({readOnly:!0})],l.prototype,"polylineLayer",null),r([a({type:b})],l.prototype,"spatialReference",void 0),r([m(["web-map","portal-item"],"spatialReference",["layers"])],l.prototype,"readSpatialReference",null),r([a({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],l.prototype,"sublayers",void 0),r([m("web-map","sublayers",["layers"])],l.prototype,"readSublayers",null),r([le("web-map","sublayers")],l.prototype,"writeSublayers",null),r([a({readOnly:!0})],l.prototype,"textLayer",null),r([a()],l.prototype,"title",void 0),r([a({readOnly:!0,json:{read:!1}})],l.prototype,"type",void 0),l=r([C("esri.layers.MapNotesLayer")],l);const he=l;export{he as default};
