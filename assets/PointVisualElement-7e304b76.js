import{oS as De,oT as Le,h_ as _,oU as f,hZ as H,od as E,hW as a,hT as le,ob as U,oV as Se,mY as oe,bf as d,np as he,f4 as Ce,i2 as ce,aQ as de,i7 as ue,i8 as pe,ia as _e,i3 as ge,i4 as A,ih as fe,mw as Re,bx as o,fJ as Me,d4 as M,mv as me,oy as Ae,oW as $e,oz as Te,oA as ze,ji as Pe,aJ as x,i5 as w,oX as Oe,om as Ie,mF as W,oY as qe,mt as C,d3 as $,on as B,gA as be,f3 as m,f2 as P,oZ as ve,o_ as We,d2 as Ne,gB as xe,o$ as je,mj as He,gC as Ue,i9 as Be,o7 as Fe,bz as F,gF as q,p0 as Ge,hF as G,p1 as Xe,hw as X,p2 as T,p3 as ke,p4 as Je,ox as k,dz as J,p5 as Ze,p6 as Ye,p7 as Ke,p8 as Qe,p9 as et,pa as tt,gJ as Z,jg as Y,pb as K,jh as Q,pc as it,pd as nt,ce as st,pe as rt,d0 as ee,pf as at,pg as lt,gb as ot,jm as te,ph as ht,pi as ct}from"./index-2d893400.js";import{t as dt}from"./LineVisualElement-994626e0.js";import{a as ut}from"./VisualElementResources-0a7678f9.js";function we(s,e){const i=s.fragment;i.include(De),s.include(Le),i.uniforms.add(new _("globalAlpha",t=>t.globalAlpha),new f("glowColor",t=>t.glowColor),new _("glowWidth",(t,n)=>t.glowWidth*n.camera.pixelRatio),new _("glowFalloff",t=>t.glowFalloff),new f("innerColor",t=>t.innerColor),new _("innerWidth",(t,n)=>t.innerWidth*n.camera.pixelRatio),new H("depthMap",(t,n)=>n.linearDepthTexture),new E("nearFar",(t,n)=>n.camera.nearFar),new H("frameColor",(t,n)=>n.mainColorTexture)),i.code.add(a`vec4 blendPremultiplied(vec4 source, vec4 dest) {
float oneMinusSourceAlpha = 1.0 - source.a;
return vec4(
source.rgb + dest.rgb * oneMinusSourceAlpha,
source.a + dest.a * oneMinusSourceAlpha
);
}`),i.code.add(a`vec4 premultipliedColor(vec3 rgb, float alpha) {
return vec4(rgb * alpha, alpha);
}`),i.code.add(a`vec4 laserlineProfile(float dist) {
if (dist > glowWidth) {
return vec4(0.0);
}
float innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));
float glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);
return blendPremultiplied(
premultipliedColor(innerColor, innerAlpha),
premultipliedColor(glowColor, glowAlpha)
);
}`),i.code.add(a`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float depthDiscontinuityAlpha) {
float depth = linearDepthFromTexture(depthMap, uv, nearFar);
if (-depth == nearFar[0]) {
return false;
}
pos = reconstructPosition(gl_FragCoord.xy, depth);
normal = normalize(cross(dFdx(pos), dFdy(pos)));
float ddepth = fwidth(depth);
depthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / depth);
return true;
}`),e.contrastControlEnabled?(i.uniforms.add(new _("globalAlphaContrastBoost",t=>t.globalAlphaContrastBoost!=null?t.globalAlphaContrastBoost:1)),i.code.add(a`float rgbToLuminance(vec3 color) {
return dot(vec3(0.2126, 0.7152, 0.0722), color);
}
vec4 laserlineOutput(vec4 color) {
float backgroundLuminance = rgbToLuminance(texture(frameColor, uv).rgb);
float alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);
return color * alpha;
}`)):i.code.add(a`vec4 laserlineOutput(vec4 color) {
return color * globalAlpha;
}`)}function pt(s){const e=new le;e.include(we,s);const{vertex:i,fragment:t}=e;return i.uniforms.add(new U("modelView",(n,r)=>Se(gt,r.camera.viewMatrix,n.origin)),new U("proj",(n,r)=>r.camera.projectionMatrix),new _("glowWidth",(n,r)=>n.glowWidth*r.camera.pixelRatio),new E("pixelToNDC",(n,r)=>oe(_t,2/r.camera.fullViewport[2],2/r.camera.fullViewport[3]))),e.attributes.add(d.START,"vec3"),e.attributes.add(d.END,"vec3"),e.attributes.add(d.UP,"vec3"),e.attributes.add(d.EXTRUDE,"vec2"),e.varyings.add("uv","vec2"),e.varyings.add("vViewStart","vec3"),e.varyings.add("vViewEnd","vec3"),e.varyings.add("vViewPlane","vec4"),i.code.add(a`void main() {
vec3 pos = mix(start, end, extrude.x);
vec4 viewPos = modelView * vec4(pos, 1);
vec4 projPos = proj * viewPos;
vec2 ndcPos = projPos.xy / projPos.w;
vec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;
vec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);
vec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);
vec2 lxy = abs(sign(projExtrudeDir) - ndcPos);
ndcPos += length(lxy) * projExtrudeDir;
vec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));
vec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;
vViewStart = (modelView * vec4(start, 1)).xyz;
vViewEnd = (modelView * vec4(end, 1)).xyz;
vViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));
float xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;
ndcPos.x += xPaddingPixels * pixelToNDC.x;
uv = ndcPos * 0.5 + 0.5;
gl_Position = vec4(ndcPos, 0, 1);
}`),t.uniforms.add(new _("perScreenPixelRatio",(n,r)=>r.camera.perScreenPixelRatio)),t.code.add(a`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {
vec3 origin = mix(start, end, 0.5);
vec3 basis = end - origin;
vec3 posAtOrigin = pos - origin;
float x = dot(normalize(basis), posAtOrigin);
float y = dot(plane.xyz, posAtOrigin);
float dx = max(abs(x) - length(basis), 0.0);
float dy = y;
float dist = length(vec2(dx, dy));
float width = fwidth(y);
float maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;
float pixelDist = dist / min(width, maxPixelDistance);
return abs(pixelDist);
}
void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
float distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);
vec4 color = laserlineProfile(distance);
float alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));
fragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);
}`),e}const _t=he(),gt=Ce(),ft=Object.freeze(Object.defineProperty({__proto__:null,build:pt},Symbol.toStringTag,{value:"Module"}));class z extends ue{initializeProgram(e){return new pe(e.rctx,z.shader.get().build(this.configuration),ye)}initializePipeline(){return _e({blending:ge(A.ONE,A.ONE_MINUS_SRC_ALPHA),colorWrite:fe})}}z.shader=new ce(ft,()=>de(()=>import("./LaserlinePath.glsl-8cf8c39b.js"),["./LaserlinePath.glsl-8cf8c39b.js","./index-2d893400.js","./index-a616bda8.css","./LineVisualElement-994626e0.js","./VisualElementResources-0a7678f9.js"],import.meta.url));const ye=new Map([[d.START,0],[d.END,1],[d.UP,2],[d.EXTRUDE,3]]);let ie=class{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=o(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const i=Me(3*e.length);let t=0;for(const n of e)i[t++]=n[0],i[t++]=n[1],i[t++]=n[2];this.buffers=[i]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const i=this._buffers[0],t=3*Math.floor(i.length/3/2);M(this._origin,i[t],i[t+1],i[t+2])}else M(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(e){const i=this._ensureVAO(e);i!=null&&(e.bindVAO(i),e.drawArrays(me.TRIANGLES,0,this._count))}dispose(){this._vao!=null&&this._vao.dispose()}_ensureVAO(e){return this._buffers==null?null:(this._vao==null&&(this._vao=this._createVAO(e,this._buffers)),this._ensureVertexData(this._vao,this._buffers),this._vao)}_createVAO(e,i){const t=this._createDataBuffer(i);return this._dirty=!1,new Ae(e,ye,{data:$e(se)},{data:Te.createVertex(e,ze.STATIC_DRAW,t)})}_ensureVertexData(e,i){if(!this._dirty)return;const t=this._createDataBuffer(i);e.vertexBuffers.data?.setData(t),this._dirty=!1}_numberOfRenderVertices(e){return 3*(2*(e.length/3-1))}_createDataBuffer(e){const i=e.reduce((u,h)=>u+this._numberOfRenderVertices(h),0);this._count=i;const t=se.createBuffer(i),n=this._origin;let r=0,l=0;for(const u of e){for(let h=0;h<u.length;h+=3){const S=M(ne,u[h],u[h+1],u[h+2]);h===0?l=this._renderCoordsHelper.getAltitude(S):this._renderCoordsHelper.setAltitude(S,l);const v=this._renderCoordsHelper.worldUpAtPosition(S,mt),c=r+2*h,j=Pe(ne,S,n);if(h<u.length-3){t.up.setVec(c,v),t.up.setVec(c+3,v),t.up.setVec(c+5,v);for(let b=0;b<6;b++)t.start.setVec(c+b,j);t.extrude.setValues(c,0,-1),t.extrude.setValues(c+1,1,-1),t.extrude.setValues(c+2,1,1),t.extrude.setValues(c+3,0,-1),t.extrude.setValues(c+4,1,1),t.extrude.setValues(c+5,0,1)}if(h>0){t.up.setVec(c-2,v),t.up.setVec(c-4,v),t.up.setVec(c-5,v);for(let b=-6;b<0;b++)t.end.setVec(c+b,j)}}r+=this._numberOfRenderVertices(u)}return t.buffer}};const mt=o(),ne=o(),se=Re().vec3f(d.START).vec3f(d.END).vec3f(d.UP).vec2f(d.EXTRUDE);class N extends Oe{constructor(){super(...arguments),this.contrastControlEnabled=!1}}x([w()],N.prototype,"contrastControlEnabled",void 0);const Ve=W(6);function Pt(s){const e=new le;e.include(qe),e.include(we,s);const i=e.fragment;if(s.lineVerticalPlaneEnabled||s.heightManifoldEnabled)if(i.uniforms.add(new _("maxPixelDistance",(t,n)=>s.heightManifoldEnabled?2*n.camera.computeScreenPixelSizeAt(t.heightManifoldTarget):2*n.camera.computeScreenPixelSizeAt(t.lineVerticalPlaneSegment.origin))),i.code.add(a`float planeDistancePixels(vec4 plane, vec3 pos) {
float dist = dot(plane.xyz, pos) + plane.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`),s.spherical){const t=(r,l,u)=>m(r,l.heightManifoldTarget,u.camera.viewMatrix),n=(r,l)=>m(r,[0,0,0],l.camera.viewMatrix);i.uniforms.add(new C("heightManifoldOrigin",(r,l)=>(t(g,r,l),n(y,l),Pe(y,y,g),$(p,y),p[3]=B(y),p)),new f("globalOrigin",(r,l)=>n(g,l)),new _("cosSphericalAngleThreshold",(r,l)=>1-Math.max(2,be(l.camera.eye,r.heightManifoldTarget)*l.camera.perRenderPixelRatio)/B(r.heightManifoldTarget))),i.code.add(a`float globeDistancePixels(float posInGlobalOriginLength) {
float dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}
float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {
vec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);
float cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);
vec3 posInGlobalOrigin = globalOrigin - pos;
float posInGlobalOriginLength = length(posInGlobalOrigin);
float sphericalDistance = globeDistancePixels(posInGlobalOriginLength);
float planarDistance = planeDistancePixels(heightPlane, pos);
return cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;
}`)}else i.code.add(a`float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {
return planeDistancePixels(heightPlane, pos);
}`);if(s.pointDistanceEnabled&&(i.uniforms.add(new _("maxPixelDistance",(t,n)=>2*n.camera.computeScreenPixelSizeAt(t.pointDistanceTarget))),i.code.add(a`float sphereDistancePixels(vec4 sphere, vec3 pos) {
float dist = distance(sphere.xyz, pos) - sphere.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`)),s.intersectsLineEnabled&&(i.uniforms.add(new _("perScreenPixelRatio",(t,n)=>n.camera.perScreenPixelRatio)),i.code.add(a`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {
float dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);
return abs(dist) - radius;
}`)),(s.lineVerticalPlaneEnabled||s.intersectsLineEnabled)&&i.code.add(a`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {
vec3 dir = end - start;
float t2 = dot(dir, pos - start);
float l2 = dot(dir, dir);
return t2 >= 0.0 && t2 <= l2;
}`),i.code.add(a`void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
vec4 color = vec4(0, 0, 0, 0);`),s.heightManifoldEnabled){i.uniforms.add(new E("angleCutoff",n=>R(n)),new C("heightPlane",(n,r)=>Ee(n.heightManifoldTarget,n.renderCoordsHelper.worldUpAtPosition(n.heightManifoldTarget,g),r.camera.viewMatrix)));const t=s.spherical?a`normalize(globalOrigin - pos)`:a`heightPlane.xyz`;i.code.add(a`
    {
      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, ${t})));
      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));
      color = max(color, heightManifoldColor * heightManifoldAlpha);
    }
    `)}return s.pointDistanceEnabled&&(i.uniforms.add(new E("angleCutoff",t=>R(t)),new C("pointDistanceSphere",(t,n)=>bt(t,n))),i.code.add(a`{
float pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);
vec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);
float pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));
color = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);
}`)),s.lineVerticalPlaneEnabled&&(i.uniforms.add(new E("angleCutoff",t=>R(t)),new C("lineVerticalPlane",(t,n)=>vt(t,n)),new f("lineVerticalStart",(t,n)=>xt(t,n)),new f("lineVerticalEnd",(t,n)=>wt(t,n))),i.code.add(a`{
if (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {
float lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);
vec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);
float lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));
color = max(color, lineVerticalColor * lineVerticalAlpha);
}
}`)),s.intersectsLineEnabled&&(i.uniforms.add(new E("angleCutoff",t=>R(t)),new f("intersectsLineStart",(t,n)=>m(g,t.lineStartWorld,n.camera.viewMatrix)),new f("intersectsLineEnd",(t,n)=>m(g,t.lineEndWorld,n.camera.viewMatrix)),new f("intersectsLineDirection",(t,n)=>(P(p,t.intersectsLineSegment.vector),p[3]=0,$(g,ve(p,p,n.camera.viewMatrix)))),new _("intersectsLineRadius",t=>t.intersectsLineRadius)),i.code.add(a`{
if (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {
float intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);
vec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);
float intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));
color = max(color, intersectsLineColor * intersectsLineAlpha);
}
}`)),i.code.add(a`fragColor = laserlineOutput(color * depthDiscontinuityAlpha);
}`),e}function R(s){return oe(yt,Math.cos(s.angleCutoff),Math.cos(Math.max(0,s.angleCutoff-W(2))))}function bt(s,e){return m(I,s.pointDistanceOrigin,e.camera.viewMatrix),I[3]=be(s.pointDistanceOrigin,s.pointDistanceTarget),I}function vt(s,e){const i=We(s.lineVerticalPlaneSegment,.5,g),t=s.renderCoordsHelper.worldUpAtPosition(i,Vt),n=$(y,s.lineVerticalPlaneSegment.vector),r=Ne(p,t,n);return $(r,r),Ee(s.lineVerticalPlaneSegment.origin,r,e.camera.viewMatrix)}function xt(s,e){const i=P(g,s.lineVerticalPlaneSegment.origin);return s.renderCoordsHelper.setAltitude(i,0),m(i,i,e.camera.viewMatrix)}function wt(s,e){const i=xe(g,s.lineVerticalPlaneSegment.origin,s.lineVerticalPlaneSegment.vector);return s.renderCoordsHelper.setAltitude(i,0),m(i,i,e.camera.viewMatrix)}function Ee(s,e,i){return m(re,s,i),P(p,e),p[3]=0,ve(p,p,i),je(re,p,Et)}const yt=he(),g=o(),p=He(),Vt=o(),y=o(),re=o(),Et=Ie(),I=Ue(),Dt=Object.freeze(Object.defineProperty({__proto__:null,build:Pt,defaultAngleCutoff:Ve},Symbol.toStringTag,{value:"Module"}));class Lt extends Fe{constructor(){super(...arguments),this.innerColor=F(1,1,1),this.innerWidth=1,this.glowColor=F(1,.5,0),this.glowWidth=8,this.glowFalloff=8,this.globalAlpha=.75,this.globalAlphaContrastBoost=2,this.angleCutoff=W(6),this.pointDistanceOrigin=o(),this.pointDistanceTarget=o(),this.lineVerticalPlaneSegment=q(),this.intersectsLineSegment=q(),this.intersectsLineRadius=3,this.heightManifoldTarget=o(),this.lineStartWorld=o(),this.lineEndWorld=o()}}class O extends ue{initializeProgram(e){return new pe(e.rctx,O.shader.get().build(this.configuration),Be)}initializePipeline(){return _e({blending:ge(A.ONE,A.ONE_MINUS_SRC_ALPHA),colorWrite:fe})}}O.shader=new ce(Dt,()=>de(()=>import("./Laserlines.glsl-f59a7248.js"),["./Laserlines.glsl-f59a7248.js","./index-2d893400.js","./index-a616bda8.css","./LineVisualElement-994626e0.js","./VisualElementResources-0a7678f9.js"],import.meta.url));class V extends N{constructor(){super(...arguments),this.heightManifoldEnabled=!1,this.pointDistanceEnabled=!1,this.lineVerticalPlaneEnabled=!1,this.intersectsLineEnabled=!1,this.spherical=!1}}x([w()],V.prototype,"heightManifoldEnabled",void 0),x([w()],V.prototype,"pointDistanceEnabled",void 0),x([w()],V.prototype,"lineVerticalPlaneEnabled",void 0),x([w()],V.prototype,"intersectsLineEnabled",void 0),x([w()],V.prototype,"spherical",void 0);class St{constructor(e,i={contrastControlEnabled:!1}){this._config=i,this._technique=null,this._heightManifoldEnabled=!1,this._pointDistanceEnabled=!1,this._lineVerticalPlaneEnabled=!1,this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._viewingMode=G.Local,this._pathVerticalPlaneEnabled=!1,this._pathVerticalPlaneData=null,this._pathTechnique=null,this.canRender=!0,this._passParameters=Xe(e,new Lt)}get renderSlots(){return[this._config.contrastControlEnabled?X.LASERLINES_CONTRAST_CONTROL:X.LASERLINES]}get needsLinearDepth(){return!0}get heightManifoldEnabled(){return this._heightManifoldEnabled}set heightManifoldEnabled(e){this._heightManifoldEnabled!==e&&(this._heightManifoldEnabled=e,this._requestRender())}get heightManifoldTarget(){return this._passParameters.heightManifoldTarget}set heightManifoldTarget(e){P(this._passParameters.heightManifoldTarget,e),this._requestRender()}get pointDistanceEnabled(){return this._pointDistanceEnabled}set pointDistanceEnabled(e){e!==this._pointDistanceEnabled&&(this._pointDistanceEnabled=e,this._requestRender())}get pointDistanceTarget(){return this._passParameters.pointDistanceTarget}set pointDistanceTarget(e){P(this._passParameters.pointDistanceTarget,e),this._requestRender()}get pointDistanceOrigin(){return this._passParameters.pointDistanceOrigin}set pointDistanceOrigin(e){P(this._passParameters.pointDistanceOrigin,e),this._requestRender()}get lineVerticalPlaneEnabled(){return this._lineVerticalPlaneEnabled}set lineVerticalPlaneEnabled(e){e!==this._lineVerticalPlaneEnabled&&(this._lineVerticalPlaneEnabled=e,this._requestRender())}get lineVerticalPlaneSegment(){return this._passParameters.lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){T(e,this._passParameters.lineVerticalPlaneSegment),this._requestRender()}get intersectsLineEnabled(){return this._intersectsLineEnabled}set intersectsLineEnabled(e){e!==this._intersectsLineEnabled&&(this._intersectsLineEnabled=e,this._requestRender())}get intersectsLineSegment(){return this._passParameters.intersectsLineSegment}set intersectsLineSegment(e){T(e,this._passParameters.intersectsLineSegment),this._requestRender()}get intersectsLineRadius(){return this._passParameters.intersectsLineRadius}set intersectsLineRadius(e){e!==this._passParameters.intersectsLineRadius&&(this._passParameters.intersectsLineRadius=e,this._requestRender())}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){e!==this._intersectsLineInfinite&&(this._intersectsLineInfinite=e,this._requestRender())}get viewingMode(){return this._viewingMode}set viewingMode(e){e!==this._viewingMode&&(this._viewingMode=e,this._requestRender())}get pathVerticalPlaneEnabled(){return this._pathVerticalPlaneEnabled}set pathVerticalPlaneEnabled(e){e!==this._pathVerticalPlaneEnabled&&(this._pathVerticalPlaneEnabled=e,this._pathVerticalPlaneData!=null&&this._requestRender())}set pathVerticalPlaneVertices(e){this._pathVerticalPlaneData==null&&(this._pathVerticalPlaneData=new ie(this._passParameters.renderCoordsHelper)),this._pathVerticalPlaneData.vertices=e,this.pathVerticalPlaneEnabled&&this._requestRender()}set pathVerticalPlaneBuffers(e){this._pathVerticalPlaneData==null&&(this._pathVerticalPlaneData=new ie(this._passParameters.renderCoordsHelper)),this._pathVerticalPlaneData.buffers=e,this.pathVerticalPlaneEnabled&&this._requestRender()}setParameters(e){ke(this._passParameters,e)&&this._requestRender()}initializeRenderContext(e){this._context=e;const i=e.renderContext.rctx;this._quadVAO=Je(i),this._techniqueRepository=e.techniqueRepository,this._techniqueConfig=new V;const t=new N;t.contrastControlEnabled=this._config.contrastControlEnabled,this._pathTechnique=this._techniqueRepository.acquire(z,t)}uninitializeRenderContext(){this._quadVAO=k(this._quadVAO),this._technique=J(this._technique),this._pathVerticalPlaneData=k(this._pathVerticalPlaneData),this._pathTechnique=J(this._pathTechnique)}prepareTechnique(){return this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled?(this._techniqueConfig.heightManifoldEnabled=this.heightManifoldEnabled,this._techniqueConfig.lineVerticalPlaneEnabled=this.lineVerticalPlaneEnabled,this._techniqueConfig.pointDistanceEnabled=this.pointDistanceEnabled,this._techniqueConfig.intersectsLineEnabled=this.intersectsLineEnabled,this._techniqueConfig.contrastControlEnabled=this._config.contrastControlEnabled,this._techniqueConfig.spherical=this._viewingMode===G.Global,this._technique=this._techniqueRepository.releaseAndAcquire(O,this._techniqueConfig,this._technique),this._technique):this._pathTechnique}render(e,i){(this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled)&&this._renderUnified(e,i),this.pathVerticalPlaneEnabled&&this._renderPath(e)}_renderUnified(e,i){const t=e.rctx;this._updatePassParameters(e),t.bindTechnique(i,this._passParameters,e.bindParameters),t.bindVAO(this._quadVAO),t.drawArrays(me.TRIANGLE_STRIP,0,4)}_renderPath(e){if(this._pathVerticalPlaneData==null||this._pathTechnique==null)return;const i=e.rctx,t=this._pathTechnique;i.bindTechnique(t,{...this._passParameters,origin:this._pathVerticalPlaneData.origin},e.bindParameters),this._pathVerticalPlaneData.draw(e.rctx)}_updatePassParameters(e){if(!this._intersectsLineEnabled)return;const i=e.bindParameters.camera;if(this._intersectsLineInfinite){if(Ze(Ye(this._passParameters.intersectsLineSegment.origin,this._passParameters.intersectsLineSegment.vector),D),D.c0=-Number.MAX_VALUE,!Ke(i.frustum,D))return;Qe(D,this._passParameters.lineStartWorld),et(D,this._passParameters.lineEndWorld)}else P(this._passParameters.lineStartWorld,this._passParameters.intersectsLineSegment.origin),xe(this._passParameters.lineEndWorld,this._passParameters.intersectsLineSegment.origin,this._passParameters.intersectsLineSegment.vector)}_requestRender(){this._context&&this._context.requestRender()}}const D=Ge();class zt extends dt{constructor(e){super(e.view),this._angleCutoff=Ve,this._style={},this._heightManifoldTarget=o(),this._heightManifoldEnabled=!1,this._intersectsLine=q(),this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._lineVerticalPlaneSegment=null,this._pathVerticalPlaneBuffers=null,this._pointDistanceLine=null,this.applyProps(e)}get testData(){return this._renderer}createResources(){this._ensureRenderer()}destroyResources(){this._disposeRenderer()}updateVisibility(){this._syncRenderer(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance()}get angleCutoff(){return this._angleCutoff}set angleCutoff(e){this._angleCutoff!==e&&(this._angleCutoff=e,this._syncAngleCutoff())}get style(){return this._style}set style(e){this._style=e,this._syncStyle()}get heightManifoldTarget(){return this._heightManifoldEnabled?this._heightManifoldTarget:null}set heightManifoldTarget(e){e!=null?(P(this._heightManifoldTarget,e),this._heightManifoldEnabled=!0):this._heightManifoldEnabled=!1,this._syncRenderer(),this._syncHeightManifold()}set intersectsWorldUpAtLocation(e){if(e==null)return void(this.intersectsLine=null);const i=this.view.renderCoordsHelper.worldUpAtPosition(e,Ct);this.intersectsLine=tt(e,i),this.intersectsLineInfinite=!0}get intersectsLine(){return this._intersectsLineEnabled?this._intersectsLine:null}set intersectsLine(e){e!=null?(T(e,this._intersectsLine),this._intersectsLineEnabled=!0):this._intersectsLineEnabled=!1,this._syncIntersectsLine(),this._syncRenderer()}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){this._intersectsLineInfinite=e,this._syncIntersectsLineInfinite()}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){this._lineVerticalPlaneSegment=e!=null?T(e):null,this._syncLineVerticalPlane(),this._syncRenderer()}get pathVerticalPlane(){return this._pathVerticalPlaneBuffers}set pathVerticalPlane(e){this._pathVerticalPlaneBuffers=e,this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncRenderer()}get pointDistanceLine(){return this._pointDistanceLine}set pointDistanceLine(e){this._pointDistanceLine=e!=null?{origin:Z(e.origin),target:e.target?Z(e.target):null}:null,this._syncPointDistance(),this._syncRenderer()}_syncRenderer(){this.attached&&this.visible&&(this._intersectsLineEnabled||this._heightManifoldEnabled||this._pointDistanceLine!=null||this._pathVerticalPlaneBuffers!=null)?this._ensureRenderer():this._disposeRenderer()}_ensureRenderer(){this._renderer==null&&(this._renderer=new St({renderCoordsHelper:this.view.renderCoordsHelper},{contrastControlEnabled:!0}),this._renderer.viewingMode=this.view.state.viewingMode,this._syncStyle(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncIntersectsLineInfinite(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncAngleCutoff(),this.view._stage&&this.view._stage.addRenderPlugin(this._renderer.renderSlots,this._renderer))}_syncStyle(){this._renderer!=null&&(this._renderer.setParameters(this._style),this._style.intersectsLineRadius!=null&&(this._renderer.intersectsLineRadius=this._style.intersectsLineRadius))}_syncAngleCutoff(){this._renderer!=null&&this._renderer.setParameters({angleCutoff:this._angleCutoff})}_syncHeightManifold(){this._renderer!=null&&(this._renderer.heightManifoldEnabled=this._heightManifoldEnabled&&this.visible,this._heightManifoldEnabled&&(this._renderer.heightManifoldTarget=this._heightManifoldTarget))}_syncIntersectsLine(){this._renderer!=null&&(this._renderer.intersectsLineEnabled=this._intersectsLineEnabled&&this.visible,this._intersectsLineEnabled&&(this._renderer.intersectsLineSegment=this._intersectsLine))}_syncIntersectsLineInfinite(){this._renderer!=null&&(this._renderer.intersectsLineInfinite=this._intersectsLineInfinite)}_syncPathVerticalPlane(){this._renderer!=null&&(this._renderer.pathVerticalPlaneEnabled=this._pathVerticalPlaneBuffers!=null&&this.visible,this._pathVerticalPlaneBuffers!=null&&(this._renderer.pathVerticalPlaneBuffers=this._pathVerticalPlaneBuffers))}_syncLineVerticalPlane(){this._renderer!=null&&(this._renderer.lineVerticalPlaneEnabled=this._lineVerticalPlaneSegment!=null&&this.visible,this._lineVerticalPlaneSegment!=null&&(this._renderer.lineVerticalPlaneSegment=this._lineVerticalPlaneSegment))}_syncPointDistance(){if(this._renderer==null)return;const e=this._pointDistanceLine,i=e!=null;this._renderer.pointDistanceEnabled=i&&e.target!=null&&this.visible,i&&(this._renderer.pointDistanceOrigin=e.origin,e.target!=null&&(this._renderer.pointDistanceTarget=e.target))}_disposeRenderer(){this._renderer!=null&&this.view._stage&&(this.view._stage.removeRenderPlugin(this._renderer),this._renderer=null)}}const Ct=o();class Ot{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=Y(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=Y(1,1,1,1),this._elevationInfo=null,this._resources=new ut({view:e.view,createResources:t=>this._createResources(t),destroyResources:t=>this._destroyResources(t),recreateGeometry:(t,n)=>{t.geometry=this._recreateGeometry(n,t.material)}});let i=!0;for(const t in e)t in this?t==="attached"?i=e[t]??!1:this[t]=e[t]:console.error("Cannot set unknown property",t);this.attached=i}destroy(){this._resources.destroy()}get visible(){return this._resources.visible}set visible(e){this._resources.visible=e}get attached(){return this._resources.attached}set attached(e){this._resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const i=this._preferredTextureSize;this._size=e,i<this._preferredTextureSize?this._resources!=null&&this._resources.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){K(e,this._color)||(Q(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,this._resources!=null&&this._resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){K(e,this._outlineColor)||(Q(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this._resources&&this._resources.recreateGeometry()}_updateMaterial(){const e=this._resources.resources;e?.material.setParameters(this._materialParameters(e.texture.id))}_updateSizeAttribute(){const e=this._resources.resources,i=this._resources.object;if(e==null||i==null)return;const t=e.geometry;if(t==null)return;const n=t.getMutableAttribute(d.SIZE).data,r=this._geometrySize;n[0]=r,n[1]=r,i.geometryVertexAttrsUpdated(i.geometries[0])}_materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:Rt,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get _geometrySize(){return this._size/L}_recreateGeometry(e,i){const t=this._createRenderGeometry(i);return t!=null&&e.addGeometry(t),t}_createResources(e){const i=it(this._primitive,this._preferredTextureSize),t=new nt(this._materialParameters(i.id)),n=this._recreateGeometry(e,t);return{material:t,texture:i,geometry:n,forEach(r){r(i),r(t),this.geometry!=null&&r(this.geometry)}}}_destroyResources(e){e.geometry=null,e.material.dispose(),e.texture.dispose()}get _preferredTextureSize(){return st(rt(2*this._geometrySize),16,128)}calculateMapBounds(e){if(this._resources.resources==null||this._resources.resources.geometry==null)return!1;const i=this._resources.resources.geometry.vertexAttributes.get(d.POSITION);return ee(i.data,this.view.renderCoordsHelper.spatialReference,ae,this.view.spatialReference),at(e,ae),!0}_createRenderGeometry(e){const i=this.geometry;if(i==null)return null;const{renderCoordsHelper:t,elevationProvider:n}=this.view,r=lt(i,n,ot.fromElevationInfo(this.elevationInfo),t),l=M(te.get(),i.x,i.y,r),u=te.get();ee(l,i.spatialReference,u,t.spatialReference);const h=this._geometrySize;return ht(e,null,u,null,[h,h],[0,0,0,1])}}const L=ct,Rt=[L/2,L/2,1-L/2,1-L/2],ae=o();export{Pt as A,Ve as C,zt as c,pt as v,Ot as y};
