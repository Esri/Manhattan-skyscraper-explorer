import{cl as pt,dG as Z,t2 as nt,ae as Ne,ai as C,jN as ze,by as E,c5 as A,bo as at,fE as yt,eN as ot,fO as gt,aJ as I,aK as R,dF as lt,aM as Y,bB as xt,bt as Je,aQ as wt,cn as We,bD as W,dD as It,cL as bt,am as ct,dg as Pe,bs as St,fA as Rt,fw as vt,aT as Tt,es as _t,eu as kt,dv as Ft,dw as Mt,eF as Ct,eD as Pt,du as $t,et as Ot,dx as Dt,dA as Bt,fg as ue,fW as Nt,aZ as zt,eM as Jt,bA as Et,ey as At,g4 as Ht,bR as Lt}from"./index-0199b717.js";import{h as ut,D as Wt,i as qt,a as Gt,p as ht,c as jt,N as $e,l as Ut,d as Vt,b as Xt,e as Yt,f as qe,o as Kt,g as Ge,Q as je,E as Ue,j as Qt,L as Zt,q as ei,k as Ve,t as ti,m as ii,n as si}from"./ImageHistogramParameters-9396515f.js";import{U as _e,j as ri,n as ye,R as ft,I as ni,a as ai,l as oi,b as li,u as ee,f as ci,m as ui,s as hi,L as fi,r as Xe,c as ge,W as di,h as mi,g as Ee,P as pi,T as yi,d as gi,v as xi,e as wi,N as Ii,i as bi,k as xe,B as Si,o as Ri,D as vi}from"./dataUtils-e563b343.js";import{k as Oe,K as we,_ as Ye,i as Ke,n as Ti,Q as ke,q as Se,$ as _i,V as ki,C as Fi,J as Mi}from"./rasterProjectionHelper-c683c451.js";import{_ as De,f as Ci,i as Pi,y as Ae,n as $i,h as Oi}from"./utils-4622a50a.js";import{T as Di}from"./TilemapCache-49fbf8a9.js";import"./normalizeUtils-30f603dc.js";import"./normalizeUtilsCommon-d91de345.js";import"./generateRendererUtils-9a953fca.js";import"./colorUtils-c0f43caf.js";let Bi=class{constructor(e=15e3,s=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,s)}decreaseRefCount(e,s){const t=e+"/"+s,i=this._cachedBlocks;if(i.has(t)){const n=i.get(t);return n.refCount--,n.refCount<=0&&(i.delete(t),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,s){const t=e+"/"+s,i=this._cachedBlocks;if(i.has(t)){const n=i.get(t);return n.ts=Date.now(),n.refCount++,i.delete(t),i.set(t,n),n.block}return null}putBlock(e,s,t,i){const n=this._cachedBlocks,a=e+"/"+s;if(n.has(a)){const o=n.get(a);o.ts=Date.now(),o.refCount++}else n.set(a,{block:t,ts:Date.now(),refCount:1,controller:i});this._trim(),this._updateTimer()}deleteBlock(e,s){const t=this._cachedBlocks,i=e+"/"+s;t.has(i)&&t.delete(i)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const s=Array.from(e),t=Date.now();for(let i=0;i<s.length&&s[i][1].ts<=t-this._duration;i++)e.delete(s[i][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const s=Array.from(e);for(let t=0;t<s.length-this._size;t++)e.delete(s[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const ve=new Map,ie=new Bi;function Qe(r,e){return e==null?r:`${r}?sliceId=${e}`}function Ni(r,e,s){const t=ve.get(r);if(!t)return e==null?ie.decreaseRefCount(r,s):0;if(e==null||t[e]==null)return ie.decreaseRefCount(r,s);const i=t[e]?.cache,n=i?.get(s);if(i&&n){if(n.refCount--,n.refCount===0){i.delete(s);for(let a=0;a<t.length;a++)t[a]?.cache.delete(s);n.controller&&n.controller.abort()}return n.refCount}return 0}function Ze(r,e,s){const t=ve.get(r);if(!t)return e==null?ie.getBlock(r,s):null;if(e==null||t[e]==null){for(let n=0;n<t.length;n++){const a=t[n]?.cache.get(s);if(a)return a.refCount++,a.block}return ie.getBlock(r,s)}const i=t[e]?.cache.get(s);if(i)return i.refCount++,i.block;for(let n=0;n<t.length;n++){if(n===e||!t[n])continue;const a=t[n]?.cache,o=a?.get(s);if(a&&o)return o.refCount++,a.set(s,o),o.block}return null}function et(r,e,s,t,i=null){const n=ve.get(r);if(!n)return void(e==null&&ie.putBlock(r,s,t,i));if(e==null||n[e]==null)return void ie.putBlock(r,s,t,i);const a={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:i};t.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),n[e]?.cache.set(s,a)}function zi(r,e,s){const t=ve.get(r);t?e!=null&&t[e]!=null?t[e]?.cache.delete(s):ie.deleteBlock(r,s):e==null&&ie.deleteBlock(r,s)}const tt=8,Ji=256;let H=class extends pt(xt){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const r=Oe();this.addResolvingPromise(r),await this.when()}normalizeCtorArgs(r){return r&&r.ioConfig&&(r={...r,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:Z.create(),...r.ioConfig}}),r}get _isGlobalWrappableSource(){const{rasterInfo:r}=this,e=we(r.spatialReference);return e!=null&&r.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:r}=this.rasterInfo;return r==null||r.type==="gcs-shift"}set rasterJobHandler(r){this._set("rasterJobHandler",r),this.datasetFormat==="Function"&&this.primaryRasters?.rasters?.forEach(e=>e.rasterJobHandler=r)}set url(r){this._set("url",nt(r,Ne.getLogger(this)))}async open(r){throw new C("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(r,e,s,t={}){const i=t.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(r,e,s,i);return this.fetchPixels(n,i.size[0],i.size[1],t)}async identify(r,e={}){r=ze(E,r).clone().normalize();const{multidimensionalDefinition:s,timeExtent:t}=e,{rasterInfo:i}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:a}=i;let{transposedVariableName:o}=e;const l=a!=null&&n&&(t!=null||ut(s));l&&!o&&(o=s!=null&&s.length>0?s[0].variableName??void 0:a.variables[0].name,e={...e,transposedVariableName:o}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:c,extent:u}=i,{datumTransformation:h}=e;let m=Ye(r,c,h);if(!u.intersects(m))return{location:m,value:null};if(i.transform!=null){const M=i.transform.inverseTransform(m);if(!i.nativeExtent.intersects(M))return{location:M,value:null};m=M}let d=0;const p=o!=null&&a!=null&&i.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const M=this.primaryRasters.rasters[0];if(p)return M.identify(m,e);const{pixelSize:P}=i,$=3,z=P.x*$/2,O=P.y*$/2,D=new A({xmin:m.x-z,xmax:m.x+z,ymin:m.y-O,ymax:m.y+O,spatialReference:c}),N={interpolation:"nearest"},{pixelBlock:q}=await M.fetchPixels(D,$,$,N),{pixelBlock:B}=await this.fetchPixels(D,$,$,N);if(q==null)return{location:m,value:null};const G=Math.floor($*$*.5),K=!q.mask||q.mask[G]?q.pixels.map(U=>U[G]):null;let se;return B!=null&&(se=!B.mask||B.mask[G]?B.pixels.map(U=>U[G]):void 0),{location:m,value:K,processedValue:se,pyramidLevel:0}}if(!p){if(e.srcResolution)d=Ke(e.srcResolution,i,this.ioConfig.sampling).pyramidLevel;else if(d=await this.computeBestPyramidLevelForLocation(r,e),d==null)return{location:m,value:null}}const y=this.identifyPixelLocation(m,d,null,p);if(y===null)return{location:m,value:null};const{row:f,col:g,rowOffset:w,colOffset:x,blockWidth:v}=y,_=o??e.sliceId,S=Qe(this.url,_),k=`${d}/${f}/${g}`;let b=Ze(S,null,k);b==null&&(b=this.fetchRawTile(d,f,g,e),et(S,null,k,b));const F=await b;if(F==null||!F.pixels?.length)return{location:m,value:null};const T=w*v+x;return this._processIdentifyResult(F,{srcLocation:m,position:T,pyramidLevel:d,useTransposedTile:!!p,requestSomeSlices:l,identifyOptions:e})}async fetchPixels(r,e,s,t={}){r=Ti(r),t=this._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:i}=this;if(t.requestRawData&&i)return this._fetchPixels(r,e,s,t);const n=we(r.spatialReference),a=ke(r);if(n==null||a===0||a===1&&this._isGlobalWrappableSource&&i)return this._fetchPixels(r,e,s,t);if(a>=3)return{extent:r,pixelBlock:null};const o=[],{xmin:l,xmax:c}=r,u=Math.round(n/(c-l)*e),h=u-Math.round((n/2-l)/(c-l)*e);let m=0;const d=[];for(let g=0;g<=a;g++){const w=new A({xmin:g===0?l:-n/2,xmax:g===a?c-n*g:n/2,ymin:r.ymin,ymax:r.ymax,spatialReference:r.spatialReference}),x=g===0?u-h:g===a?e-m:u;m+=x,d.push(x);const v=t.disableWrapAround&&g>0?null:this._fetchPixels(w,x,s,t);o.push(v)}const p=(await Promise.all(o)).map(g=>g?.pixelBlock);let y=null;const f={width:e,height:s};return this.rasterJobHandler?y=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:f,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:d},t)).pixelBlock:y=_e(p,f,{blockWidths:d}),{extent:r,srcExtent:Se(r,this.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:y}}async fetchRawPixels(r,e,s,t={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const i=await this._fetchRawTiles(r,e,s,t),{nativeExtent:n,nativePixelSize:a,storageInfo:o}=this.rasterInfo,l=2**r,c=a.x*l,u=a.y*l,h=new A({xmin:n.xmin+c*e.x,xmax:n.xmin+c*(e.x+s.width-1),ymin:n.ymax-u*(e.y+s.height-1),ymax:n.ymax-u*e.y,spatialReference:n.spatialReference});if(!i)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:m,mosaicSize:d}=i;if(m.length===1&&m[0]!=null&&m[0].width===s.width&&m[0].height===s.height)return{extent:h,srcExtent:h,pixelBlock:i.pixelBlocks[0]};const p=r>0?o.pyramidBlockWidth:o.blockWidth,y=r>0?o.pyramidBlockHeight:o.blockHeight,f={x:e.x%p,y:e.y%y};let g;return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:d,destDimension:s,clipOffset:f,clipSize:s,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:g=_e(m,d,{clipOffset:f,clipSize:s}),{extent:h,srcExtent:h,pixelBlock:g}}fetchRawTile(r,e,s,t){throw new C("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(r){return Se(this.rasterInfo.extent,r)}decodePixelBlock(r,e){return!this.rasterJobHandler||e.useCanvas?ri(r,e):this.rasterJobHandler.decode({data:r,options:e})}async request(r,e,s=0){const{customFetchParameters:t}=this.ioConfig,{range:i,query:n,headers:a}=e;s=s??e.retryCount??this.ioConfig.retryCount;const o=i?{Range:`bytes=${i.from}-${i.to}`}:null;try{return await at(r,{...e,query:{...n,...t},headers:{...a,...o}})}catch(l){if(s>0)return s--,this.request(r,e,s);throw l}}getSliceIndex(r){const{multidimensionalInfo:e}=this.rasterInfo;return e==null||r==null||r.length===0?null:Wt(r,e)}getTileExtentFromTileInfo(r,e,s,t){const i=yt(t.lodAt(r));return this.getTileExtent({x:i.resolution,y:i.resolution},e,s,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:r,spatialReference:e,extent:s,pixelSize:t}=this.rasterInfo;if(!r.tileInfo){const i=[],n=r.maximumPyramidLevel||0;let a=Math.max(t.x,t.y),o=1/.0254*96*a;for(let c=0;c<=n;c++)i.push(new ot({level:n-c,resolution:a,scale:o})),a*=2,o*=2;const l=new E({x:s.xmin,y:s.ymax,spatialReference:e});r.tileInfo=new Z({origin:l,size:[r.blockWidth,r.blockHeight],spatialReference:e,lods:i}),r.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(r,e=512,s=512,t){const{width:i,height:n,nativeExtent:a,pixelSize:o,spatialReference:l}=r,c=new E({x:a.xmin,y:a.ymax,spatialReference:l});t==null&&(t=Math.max(0,Math.round(Math.log(Math.max(i,n))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[o],t);r.storageInfo=new ye({blockWidth:e,blockHeight:s,pyramidBlockWidth:e,pyramidBlockHeight:s,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}async computeBestPyramidLevelForLocation(r,e={}){return 0}computeBlockBoundary(r,e,s,t,i,n=0,a=2){if(i.length===1&&n>0){i=[...i];let{x:u,y:h}=i[0];for(let m=0;m<n;m++)u*=a,h*=a,i.push({x:u,y:h})}const o=[],{x:l,y:c}=t;for(let u=0;u<i.length;u++){const{x:h,y:m}=i[u];o.push({minCol:Math.floor((r.xmin-l+.1*h)/e/h),maxCol:Math.floor((r.xmax-l-.1*h)/e/h),minRow:Math.floor((c-r.ymax+.1*m)/s/m),maxRow:Math.floor((c-r.ymin-.1*m)/s/m)})}return o}getPyramidPixelSize(r){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:s,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(r===0)return e;if(s!=null&&s.length)return s[r-1];const i=t**r;return{x:e.x*i,y:e.y*i}}identifyPixelLocation(r,e,s,t){const{spatialReference:i,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=a,u=t&&c!=null?c.tileSize[0]:a.blockWidth,h=t&&c!=null?c.tileSize[1]:a.blockHeight,m=Ye(r,i,s);if(!n.intersects(m)||e<0||e>o)return null;const d=this.getPyramidPixelSize(e),{x:p,y}=d,f=(l.y-m.y)/y/h,g=(m.x-l.x)/p/u,w=Math.min(h-1,Math.floor((f-Math.floor(f))*h)),x=Math.min(u-1,Math.floor((g-Math.floor(g))*u));return{pyramidLevel:e,row:Math.floor(f),col:Math.floor(g),rowOffset:w,colOffset:x,blockWidth:u,srcLocation:m}}getTileExtent(r,e,s,t,i,n){const[a,o]=n,l=t.x+s*a*r.x,c=l+a*r.x,u=t.y-e*o*r.y,h=u-o*r.y;return new A({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:i})}getBlockWidthHeight(r){return{blockWidth:r>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:r>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(r,e,s){const t=this.rasterInfo.storageInfo.blockBoundary[r];return!t||t.maxRow<e||t.maxCol<s||t.minRow>e||t.minCol>s}async _fetchPixels(r,e,s,t={}){let i=ke(r);if(i>=2)return{extent:r,pixelBlock:null};const n=this._getSourceDataInfo(r,e,s,t),{pyramidLevel:a,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:u,ul:h}=n;if(c===0||u===0)return{extent:r,srcExtent:l,pixelBlock:null};const{rasterInfo:m}=this,d=m.transform,p=d?.type==="gcs-shift",y=we(r.spatialReference)!=null;!p&&y||(i=ke(n.srcExtent,p));const f=await this._fetchRawTiles(a,h,{width:c,height:u,wrapCount:i},t);if(!f)return{extent:r,srcExtent:l,pixelBlock:null};const g=m.storageInfo,w=a>0?g.pyramidBlockWidth:g.blockWidth,x=a>0?g.pyramidBlockHeight:g.blockHeight;let{x:v,y:_}=m.pixelSize;if(a>0){const{pyramidResolutions:Q,pyramidScalingFactor:mt}=g;if(Q!=null&&Q[a-1])({x:v,y:_}=Q[a-1]);else{const Le=mt**a;v*=Le,_*=Le}}const S=m.spatialReference,k=new E({x:v,y:_,spatialReference:S}),b=w===c&&x===u&&h.x%w==0&&h.y%x==0,F=new E({x:(r.xmax-r.xmin)/e,y:(r.ymax-r.ymin)/s,spatialReference:r.spatialReference}),T=!r.spatialReference.equals(S),M=S.isGeographic?1e-9:1e-4,{datumTransformation:P}=t;if(!T&&b&&f.pixelBlocks.length===1&&w===e&&x===s&&this._isSameResolution(o,F,M))return{extent:r,srcExtent:l,srcTilePixelSize:k,pixelBlock:f.pixelBlocks[0]};const $=y&&we(l.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,z=t.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");z&&!this.rasterJobHandler&&await Oe();const O=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:r,srcBufferExtent:f.extent,pixelSize:F.toJSON(),datumTransformation:P,rasterTransform:d,hasWrapAround:i>0||$,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:z},t):_i({projectedExtent:r,srcBufferExtent:f.extent,pixelSize:F,datumTransformation:P,rasterTransform:d,hasWrapAround:i>0||$,isAdaptive:!1,includeGCSGrid:z});let D;const N=!t.requestRawData,q={rows:O.spacing[0],cols:O.spacing[1]},B=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(a,f.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:K,isPartiallyFilled:se}=f;let U=null;if(this.rasterJobHandler)({pixelBlock:D,localNorthDirections:U}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:K,destDimension:N?{width:e,height:s}:null,coefs:N?O.coefficients:null,sampleSpacing:N?q:null,projectDirections:z,gcsGrid:z?O.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:t.interpolation,alignmentInfo:B,blockWidths:null},t));else{const Q=_e(G,K,{alignmentInfo:B});D=N?ft(Q,{width:e,height:s},O.coefficients,q,t.interpolation):Q,z&&O.gcsGrid&&(U=ni({width:e,height:s},O.gcsGrid),D=ai(D,this.rasterInfo.dataType,U))}return t.requestRawData||z?{extent:r,srcExtent:l,srcTilePixelSize:k,pixelBlock:D,transformGrid:O,localNorthDirections:U,isPartiallyFilled:se}:{extent:r,srcExtent:l,srcTilePixelSize:k,pixelBlock:D}}async _fetchRawTiles(r,e,s,t){const{origin:i,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:o}=this.getBlockWidthHeight(r);let{x:l,y:c}=e,{width:u,height:h,wrapCount:m}=s;const d=this._getRasterTileAlignmentInfo(r,0);t.buffer&&(l-=t.buffer.cols,c-=t.buffer.rows,u+=2*t.buffer.cols,h+=2*t.buffer.rows);let p=0,y=0,f=0;m&&d!=null&&({worldColumnCountFromOrigin:y,originColumnOffset:f,rightPadding:p}=d,y*d.blockWidth-p>=l+u&&(p=0));const g=Math.floor(l/a),w=Math.floor(c/o),x=Math.floor((l+u+p-1)/a),v=Math.floor((c+h+p-1)/o),_=n[r];if(!_)return null;const{minRow:S,minCol:k,maxCol:b,maxRow:F}=_;if(m===0&&(v<S||x<k||w>F||g>b))return null;const T=new Array;let M=!1;const P=this.ioConfig.allowPartialFill==null?t.allowPartialFill:this.ioConfig.allowPartialFill;for(let B=w;B<=v;B++)for(let G=g;G<=x;G++){let K=G;if(!t.disableWrapAround&&m&&d!=null&&y<=G&&(K=G-y-f),B>=S&&K>=k&&F>=B&&b>=K){const se=this._fetchRawTile(r,B,K,t);P?T.push(new Promise(U=>{se.then(Q=>U(Q)).catch(()=>{M=!0,U(null)})})):T.push(se)}else T.push(Promise.resolve(null))}if(T.length===0)return null;const $=await Promise.all(T),z={height:(v-w+1)*o,width:(x-g+1)*a},{spatialReference:O}=this.rasterInfo,D=this.getPyramidPixelSize(r),{x:N,y:q}=D;return{extent:new A({xmin:i.x+g*a*N,xmax:i.x+(x+1)*a*N,ymin:i.y-(v+1)*o*q,ymax:i.y-w*o*q,spatialReference:O}),pixelBlocks:$,mosaicSize:z,isPartiallyFilled:M}}_isSameResolution(r,e,s){return Math.abs(r.x-e.x)<s&&Math.abs(r.y-e.y)<s}_fetchRawTile(r,e,s,t){const i=this.rasterInfo.storageInfo.blockBoundary[r];if(!i)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:o,maxRow:l}=i;if(e<n||s<a||e>l||s>o)return Promise.resolve(null);const c=Qe(this.url,t.sliceId),u=`${r}/${e}/${s}`;let h=Ze(c,t.registryId,u);if(h==null){const m=new AbortController;h=this.fetchRawTile(r,e,s,{...t,signal:m.signal}),et(c,t.registryId,u,h,m),h.catch(()=>zi(c,t.registryId,u))}return t.signal&&gt(t,()=>{Ni(c,t.registryId,u)}),h}_computeMagDirValues(r){const{bandCount:e,dataType:s}=this.rasterInfo;if(!(e===2&&s==="vector-magdir"||s==="vector-uv")||r?.length!==2||!r[0]?.length)return null;const t=r[0].length;if(s==="vector-magdir"){const l=r[1].map(c=>(c+360)%360);return[r[0],l]}const[i,n]=r,a=[],o=[];for(let l=0;l<t;l++){const[c,u]=oi([i[l],n[l]]);a.push(c),o.push(u)}return[a,o]}_getRasterTileAlignmentInfo(r,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=ki(this.rasterInfo)),this._rasterTileAlighmentInfo.pyramidsInfo==null?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[r]}}_getSourceDataInfo(r,e,s,t={}){const i={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(i.srcResolution=t.srcResolution,this._updateSourceDataInfo(r,i));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:o,pyramidLevel:l}=i,c=a/e,u=o/s,h=l<n&&c*u>=16,m=l===n&&this._requireTooManySrcTiles(a,o,e,s);if(h||m||a===0||o===0){const d=new E({x:(r.xmax-r.xmin)/e,y:(r.ymax-r.ymin)/s,spatialReference:r.spatialReference});let p=Fi(d,this.rasterInfo.spatialReference,r,i.datumTransformation);const y=!p||t.srcResolution&&p.x+p.y<t.srcResolution.x+t.srcResolution.y;if(h&&t.srcResolution&&y){const f=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(n-l+3>=f){const g=2**f;p={x:t.srcResolution.x*g,y:t.srcResolution.y*g}}}p&&(i.srcResolution=p,this._updateSourceDataInfo(r,i))}return this._requireTooManySrcTiles(i.srcWidth,i.srcHeight,e,s)&&(i.srcWidth=0,i.srcHeight=0),i}_requireTooManySrcTiles(r,e,s,t){const{tileInfo:i}=this.rasterInfo.storageInfo;return Math.ceil(r/i.size[0])*Math.ceil(e/i.size[1])>=Ji||r/s>tt||e/t>tt}_updateSourceDataInfo(r,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:s}=this,t=s.spatialReference,{srcResolution:i,datumTransformation:n}=e,{pyramidLevel:a,pyramidResolution:o,excessiveReading:l}=Ke(i,s,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||Se(r,t,n);if(c==null)return;const u=s.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:h,y:m}=s.storageInfo.origin,d=Math.floor((c.xmin-h)/o.x+.1),p=Math.floor((m-c.ymax)/o.y+.1),y=Math.floor((c.xmax-h)/o.x-.1),f=Math.floor((m-c.ymin)/o.y-.1),g=c.width<.1*o.x?0:y-d+1,w=c.height<.1*o.y?0:f-p+1;e.pyramidLevel=a,e.pyramidResolution=o,e.srcWidth=g,e.srcHeight=w,e.ul={x:d,y:p}}_getRequestOptionsWithSliceId(r){return this.rasterInfo.multidimensionalInfo!=null&&r.sliceId==null&&(r={...r,sliceId:this.getSliceIndex(r.multidimensionalDefinition)}),r}_processIdentifyResult(r,e){const{srcLocation:s,position:t,pyramidLevel:i,useTransposedTile:n}=e,a=r.pixels[0].length/r.width/r.height;if(!(!r.mask||r.mask[t]))return{location:s,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(o==null||!n){const f=r.pixels.map(x=>x[t]),g={location:s,value:f,pyramidLevel:i},w=this._computeMagDirValues(f.map(x=>[x]));return w?.length&&(g.magdirValue=w.map(x=>x[0])),g}let l=r.pixels.map(f=>f.slice(t*a,t*a+a)),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:h}=e;let m=qt(o,h.transposedVariableName);if(u){const f=Gt(m,h.multidimensionalDefinition,h.timeExtent);l=l.map(g=>f.map(w=>g[w])),c=c?.map(g=>f.map(w=>g[w])),m=f.map(g=>m[g])}const d=r.noDataValues||this.rasterInfo.noDataValue,p={pixels:l,pixelType:r.pixelType};let y;return d!=null&&(li(p,d),y=p.mask),{location:s,value:null,dataSeries:m.map((f,g)=>{const w={value:y?.[g]===0?null:l.map(x=>x[g]),multidimensionalDefinition:f.multidimensionalDefinition.map(x=>new ht({...x,isSlice:!0}))};return c?.length&&(w.magdirValue=[c[0][g],c[1][g]]),w}),pyramidLevel:i}}};I([R()],H.prototype,"_rasterTileAlighmentInfo",void 0),I([R({readOnly:!0})],H.prototype,"_isGlobalWrappableSource",null),I([R({readOnly:!0})],H.prototype,"_hasNoneOrGCSShiftTransform",null),I([R()],H.prototype,"rasterJobHandler",null),I([R(lt)],H.prototype,"url",null),I([R({type:String,json:{write:!0}})],H.prototype,"datasetName",void 0),I([R({type:String,json:{write:!0}})],H.prototype,"datasetFormat",void 0),I([R()],H.prototype,"hasUniqueSourceStorageInfo",void 0),I([R()],H.prototype,"rasterInfo",void 0),I([R()],H.prototype,"ioConfig",void 0),I([R()],H.prototype,"sourceJSON",void 0),H=I([Y("esri.layers.support.rasterDatasets.BaseRaster")],H);const le=H;let re=class extends le{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(e){await this.init();const{rasterFunction:s}=this;this.primaryRasters?.rasters?.length?s.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=s.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(u=>u.rasterJobHandler=this.rasterJobHandler));const{rasters:t,rasterIds:i}=this.primaryRasters,n=t.map(u=>u.rasterInfo?void 0:u.open(e));await Promise.all(n);const a=t.map(({rasterInfo:u})=>u),o=s.bind({rasterInfos:a,rasterIds:i});if(!o.success||a.length===0)throw new C("raster-function:open",`cannot bind the function: ${o.error??""}`);const l=s.functionName==="Table"?s:s.functionArguments?.raster;l?.functionName==="Table"&&(s.rasterInfo.attributeTable=Je.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=a[0];this.hasUniqueSourceStorageInfo=a.length===1||a.slice(1).every(u=>this._hasSameStorageInfo(u,c)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",s.rasterInfo)}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,s,t,i={}){const{rasters:n,rasterIds:a}=this.primaryRasters;let o=!1;const{interpolation:l}=i,c=this.rasterFunction.flatWebGLFunctionChain?.hasSurfaceFunction;!i.requestRawData&&l!=="bilinear"&&c&&(o=n.length===1&&!i.skipRasterFunction,i={...i,interpolation:"bilinear",requestRawData:o});const u=n.map(x=>x.fetchPixels(e,s,t,i)),h=await Promise.all(u),m=h.map(x=>x.pixelBlock),d=o||i.requestRawData?h.map(x=>x.srcTilePixelSize):null;if(i.skipRasterFunction||m.every(x=>x==null))return h[0];const p=h.find(x=>x.pixelBlock!=null)?.extent??e,y=this.rasterJobHandler?await this.rasterJobHandler.process({extent:p,primaryPixelBlocks:m,primaryPixelSizes:d,primaryRasterIds:a}):this.rasterFunction.process({extent:p,primaryPixelBlocks:m,primaryPixelSizes:d,primaryRasterIds:a}),{transformGrid:f}=h[0];if(!o||y==null||f==null)return{...h[0],pixelBlock:y};const g={rows:f.spacing[0],cols:f.spacing[1]};let w;return this.rasterJobHandler?w=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[y],srcMosaicSize:{width:y.width,height:y.height},destDimension:{width:s,height:t},coefs:f.coefficients,sampleSpacing:g,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},i)).pixelBlock:w=ft(y,{width:s,height:t},f.coefficients,g,l),{extent:e,srcExtent:h[0].srcExtent,pixelBlock:w}}_hasSameStorageInfo(e,s){const{storageInfo:t,pixelSize:i,spatialReference:n,extent:a}=e,{storageInfo:o,pixelSize:l,spatialReference:c,extent:u}=s;return i.x===l.x&&i.y===l.y&&n.equals(c)&&a.equals(u)&&t.blockHeight===o.blockHeight&&t.blockWidth===o.blockWidth&&t.maximumPyramidLevel===o.maximumPyramidLevel}};I([R({type:String,json:{write:!0}})],re.prototype,"datasetFormat",void 0),I([R()],re.prototype,"tileType",void 0),I([R()],re.prototype,"rasterFunction",void 0),I([R()],re.prototype,"primaryRasters",void 0),re=I([Y("esri.layers.support.rasterDatasets.FunctionRaster")],re);const Be=re;function Ei(r,e){if(r.spatialReference.equals(e))return r;const s=We(r.spatialReference),t=We(e);if(s===t)return r;const i=s/t;return{x:r.x*i,y:r.y*i}}async function Ai(r,e,s){if(s.type==="extent")return Li(r,e,s);const{width:t,height:i}=r,n=new Uint8Array(t*i),{contains:a,intersects:o}=await wt(()=>import("./geometryEngine-6e18cfbc.js"),["./geometryEngine-6e18cfbc.js","./geometryEngineBase-c1c9526a.js","./index-0199b717.js","./index-a616bda8.css","./hydrated-bc13ab24.js"],import.meta.url);return o(e,s)?s.type==="polyline"?Wi(r,e,s):a(s,e)?r:Hi(r,e,s):new ee({pixelType:r.pixelType,width:t,height:i,mask:n,maskIsAlpha:!1,pixels:[...r.pixels]})}function Hi(r,e,s){if(!r)return r;const{width:t,height:i}=r,n=e.width/t,a=e.height/i,{xmin:o,ymax:l}=e;let c;if(s.type==="extent"){const f=(s.xmin-o)/n,g=(s.xmax-o)/n,w=(l-s.ymax)/a,x=(l-s.ymin)/a;c=[[[f,w],[f,x],[g,x],[g,w],[f,w]]]}else c=s.rings.map(f=>f.map(([g,w])=>[(g-o)/n,(l-w)/a]));const u=document.createElement("canvas");u.width=t,u.height=i;const h=u.getContext("2d");h.fillStyle="#f00",c.forEach(f=>{h.beginPath(),h.moveTo(f[0][0],f[0][1]);for(let g=0;g<f.length;g++)h.lineTo(f[g][0],f[g][1]);h.closePath(),h.fill()});const m=h.getImageData(0,0,t,i).data,d=r.mask,p=t*i,y=new Uint8Array(p);for(let f=0;f<p;f++)d&&!d[f]||(y[f]=m[4*f+3]>127?255:0);return new ee({pixelType:r.pixelType,width:t,height:i,mask:y,maskIsAlpha:!1,pixels:[...r.pixels]})}function Li(r,e,s){const{width:t,height:i}=r,n=new Uint8Array(t*i),a=e.width/t,o=e.height/i;if(s.width/a<.5||s.height/o<.5)return new ee({pixelType:r.pixelType,width:t,height:i,mask:n,pixels:[...r.pixels]});const{xmin:l,xmax:c,ymin:u,ymax:h}=e,{xmin:m,xmax:d,ymin:p,ymax:y}=s,f=Math.max(l,m),g=Math.min(c,d),w=Math.max(u,p),x=Math.min(h,y),v=.5*a,_=.5*o;if(g-f<v||x-w<_||g<l+v||f>c-v||w>h-_||x<u+_)return new ee({pixelType:r.pixelType,width:t,height:i,mask:n,pixels:[...r.pixels]});const S=Math.max(0,(f-l)/a),k=Math.min(t,Math.max(0,(g-l)/a)),b=Math.max(0,(h-x)/o),F=Math.min(i,Math.max(0,(h-w)/o)),T=Math.round(S),M=Math.round(k)-1,P=Math.round(b),$=Math.round(F)-1;if(T===M&&S%1>.5&&k%1<.5||P===$&&b%1>.5&&F%1<.5)return new ee({pixelType:r.pixelType,width:t,height:i,mask:n,pixels:[...r.pixels]});if(T===0&&P===0&&M===t&&$===i)return r;const z=r.mask;for(let O=P;O<=$;O++)for(let D=T;D<=M;D++){const N=O*t+D;n[N]=z?z[N]:255}return new ee({pixelType:r.pixelType,width:t,height:i,mask:n,pixels:[...r.pixels]})}function Wi(r,e,s){const{width:t,height:i}=r,n=new Uint8Array(t*i),a=e.width/t,o=e.height/i,{xmin:l,ymax:c}=e,{paths:u}=s,h=r.mask;for(let m=0;m<u.length;m++){const d=u[m];for(let p=0;p<d.length-1;p++){const[y,f]=d[p],[g,w]=d[p+1];let x=Math.floor((c-f)/o),v=Math.floor((c-w)/o);if(v<x){const S=x;x=v,v=S}x=Math.max(0,x),v=Math.min(i-1,v);const _=(g-y)/(w-f);for(let S=x;S<=v;S++){const k=S===x?Math.max(f,w):(i+1-S)*o,b=S===v?Math.min(f,w):k-o;let F=Math.floor(w===f?(y-l)/a:(_*(k-f)+y-l)/a),T=Math.floor(w===f?(g-l)/a:(_*(b-f)+y-l)/a);if(T<F){const P=F;F=T,T=P}const M=S*t;F=Math.max(0,F),T=Math.min(t-1,T);for(let P=M+F;P<=M+T;P++)n[P]=h?h[P]:255}}}return new ee({pixelType:r.pixelType,width:t,height:i,mask:n,pixels:[...r.pixels]})}function qi(r,e,s,t=!0){const{spatialReference:i}=r,{x:n,y:a}=Ei(s,i);let o,l,c;const u=e.type==="extent"?e:e.extent;let{xmin:h,xmax:m,ymax:d,ymin:p}=u;const{xmin:y,ymax:f}=r.extent;return t?(h=y+(h>y?n*Math.round((h-y)/n):0),d=f-(d<f?a*Math.round((f-d)/a):0),m=y+(m>y?n*Math.round((m-y)/n):0),p=f-(p<f?a*Math.round((f-p)/a):0),o=new A({xmin:h,ymax:d,xmax:m,ymin:p,spatialReference:i}),l=Math.round(o.width/n),c=Math.round(o.height/a)):(l=Math.floor((m-h)/n+.8),c=Math.floor((d-p)/a+.8),h=y+(h>y?n*Math.floor((h-y)/n+.1):0),d=f-(d<f?a*Math.floor((f-d)/a+.1):0),m=h+l*n,p=d-c*a,o=new A({xmin:h,ymax:d,xmax:m,ymin:p,spatialReference:i})),{extent:o,width:l,height:c}}const it=Ne.getLogger("esri.layers.mixins.ImageryTileMixin"),Gi=r=>{let e=class extends r{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=t[0]?.raster?.datasetFormat==="Function"}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){t?.functionName?.toLowerCase()==="none"&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}set url(t){this._set("url",nt(t,it))}set renderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,i,n){const a=i?.layerDefinition?.drawingInfo?.renderer;return Xt(a,n)||void 0}async convertVectorFieldData(t,i){if(t==null||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:t,dataType:a},i):ci(t,a)}async computeStatisticsHistograms(t,i){t=ze(Yt,t).clone();const{rasterInfo:n}=this,{geometry:a}=t;if(a==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=a;const{spatialReference:l}=n;a.spatialReference.equals(l)||(await Oe(),o=a.type==="extent"?Se(a,l):Mi(a,l));const c=t.pixelSize??new E({x:n.pixelSize.x,y:n.pixelSize.y,spatialReference:l}),{extent:u,width:h,height:m}=qi(n,o,c),d=await this.fetchPixels(u,h,m,{...i,interpolation:"nearest"});if(d.pixelBlock==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await Ai(d.pixelBlock,u,o),y=this._rasterJobHandler.instance;return y?y.computeStatisticsHistograms({pixelBlock:p},i):ui(p)}async createFlowMesh(t,i){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(t,i):hi(t.meshType,t.simulationSettings,t.flowData,i.signal!=null?i.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){const{multidimensionalInfo:i}=this.rasterInfo??{};if(i==null)return t;let n=t.multidimensionalDefinition||this.multidimensionalDefinition;n!=null&&n.length||(n=qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=t.timeExtent||this.timeExtent;if(n!=null&&a!=null&&(a.start!=null||a.end!=null)){n=n.map(y=>y.clone());const o=i.variables.find(({name:y})=>y===n[0].variableName)?.dimensions?.find(({name:y})=>y==="StdTime"),l=n.find(({dimensionName:y})=>y==="StdTime");if(!o||!l)return{...t,multidimensionalDefinition:null};const{start:c,end:u}=a,h=c==null?null:c.getTime(),m=u==null?null:u.getTime(),d=h??m,p=m??h;if(o.values!=null){const y=o.values.filter(f=>{if(Array.isArray(f)){if(d===p)return f[0]<=d&&f[1]>=d;const g=f[0]<=d&&f[1]>d||f[0]<p&&f[1]>=p,w=f[0]>=d&&f[1]<=p||f[0]<d&&f[1]>p;return g||w}return d===p?f===d:f>=d&&f<=p});if(y.length){const f=y.sort((g,w)=>{const x=Array.isArray(g)?g[0]:g,v=Array.isArray(g)?g[1]:g,_=Array.isArray(w)?w[0]:w,S=Array.isArray(w)?w[1]:w;return d===p?x-_:Math.abs(v-p)-Math.abs(S-p)})[0];l.values=[f]}else n=null}else if(o.hasRegularIntervals&&o.extent){const[y,f]=o.extent;d>f||p<y?n=null:l.values=d===p?[d]:[Math.max(y,d),Math.min(f,p)]}}return n!=null&&Kt(n,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:n}}async updateRasterFunction(){if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const u=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&u&&this._set("rasterFunction",$e.fromJSON(u)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let t,i=this.raster,n=!1;i.datasetFormat==="Function"?(t=i.primaryRasters.rasters,i=t[0],n=!0):t=[i];const{rasterFunction:a}=this;if(a){const u={raster:i};t.length>1&&t.forEach(d=>u[d.url]=d);const h=De(a.functionDefinition?.toJSON()??a.toJSON(),u),m=new Be({rasterFunction:h});m.rasterJobHandler=this._rasterJobHandler.instance,await m.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=m}else this.raster=i,this._cachedRasterFunctionJson=null,await i.when();if(this._cachedRendererJson=null,!n&&!a)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o?.length?o.some(u=>u>=l):l>=3;o&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:i}=this;if(!t||!i||!this.renderer)return;const{rasterInfo:n}=this.raster,a=Ge(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),o=a?.name,l=je({...this.renderer.toJSON(),variableName:o});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const c=this._rasterJobHandler.instance;c&&(i.rasterInfo=Ue(n,o),i.rendererJSON=l,i.bind(),await c.updateSymbolizer(i),this._cachedRendererJson=l)}async applyRenderer(t,i){const n=t&&t.pixelBlock;if(!(n!=null&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return a=o?await o.symbolize({...t,simpleStretchParams:i,bandIds:l}):this.symbolizer.symbolize({...t,simpleStretchParams:i,bandIds:l}),a}getTileUrl(t,i,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${i}/${n}`:""}getCompatibleTileInfo(t,i,n=!1){if(!this.loaded||i==null)return null;if(n&&t.equals(this.spatialReference))return this.tileInfo;const a=bt(t);return Z.create({size:256,spatialReference:t,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:i.xmin,y:i.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,i,n,a={}){if(s(this),a.requestAsImageElement){const l=this.getTileUrl(t,i,n);return at(l,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(c=>c.data)}const{rasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null){const l=a.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,i,n,l),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),this.renderer?.type==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,i,n,a)}async fetchPixels(t,i,n,a={}){return this.rasterInfo.multidimensionalInfo!=null&&(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),i=Math.round(i),n=Math.round(n),this.raster.fetchPixels(t,i,n,a))}async identify(t,i={}){const{raster:n,rasterInfo:a}=this;if(a.multidimensionalInfo!=null&&!(a.hasMultidimensionalTranspose&&(ut(i.multidimensionalDefinition)||i.transposedVariableName||i.timeExtent))&&(i=this.normalizeRasterFetchOptions(i)).multidimensionalDefinition==null)return{location:t,value:null};const o=this.multidimensionalSubset?.areaOfInterest;if(o&&!o.contains(t))throw new C("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return n.identify(t,i)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.rasterInfo?.multidimensionalInfo;if(t==null||this.rasterInfo?.dataType!=="standard-time")return!1;const i=this.multidimensionalDefinition,n=i?.[0]?.variableName;return t.variables.some(a=>a.name===n&&(!i?.[0].dimensionName||a.dimensions.some(o=>o.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){const i=t??this.rasterInfo?.multidimensionalInfo;return Qt(this.multidimensionalSubset,i)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=qe(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new ti;return this._rasterJobHandler.connectionPromise=t.initialize().then(async()=>{s(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(this.interpolation==null){s(this);const{raster:t}=this,i=Zt(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",i)}}_configDefaultRenderer(t="no"){s(this);const{rasterInfo:i}=this.raster;!this.bandIds&&i.bandCount>1&&(this.bandIds=ei(i));const n=Ge(i,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=n?.name;if(!this.renderer||t==="override"){const u=Ve(i,{bandIds:this.bandIds,variableName:a}),h=i.statistics,m=h&&h.length>0?h[0]:null,d=m?.max??0,p=m?.min??0;this.raster.datasetFormat==="WCSServer"&&u.type==="raster-stretch"&&(d>1e24||p<-1e24)&&(u.dynamicRangeAdjustment=!0,u.statistics=null,u.stretchType==="none"&&(u.stretchType="min-max")),this.renderer=u}const o=je({...this.renderer.toJSON(),variableName:a}),l=Ue(i,a);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=l):this.symbolizer=new fi({rendererJSON:o,rasterInfo:l});const c=this.symbolizer.bind();if(c.success){if(t==="auto"){const{colormap:u}=this.raster.rasterInfo,h=this.renderer;if(u!=null&&h.type==="raster-colormap"){const m=Ve(this.raster.rasterInfo);JSON.stringify(m)!==JSON.stringify(h)&&this._configDefaultRenderer("override")}else if(h.type==="raster-stretch"){const m=this.bandIds?.length,d=h.statistics?.length;!h.dynamicRangeAdjustment&&d&&m&&d!==m&&this._configDefaultRenderer("override")}}}else it.warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function s(t){if(!t.raster||!t.rasterInfo)throw new C("imagery-tile","no raster")}return I([R()],e.prototype,"_cachedRendererJson",void 0),I([R()],e.prototype,"_cachedRasterFunctionJson",void 0),I([R()],e.prototype,"_compatibleFullExtent",void 0),I([R()],e.prototype,"_isConstructedFromFunctionRaster",void 0),I([R()],e.prototype,"_rasterJobHandler",void 0),I([R()],e.prototype,"bandIds",void 0),I([R({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([R({json:{read:!1}})],e.prototype,"fullExtent",null),I([R()],e.prototype,"interpolation",void 0),I([R()],e.prototype,"ioConfig",void 0),I([R({type:[ht],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),I([R({type:jt,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([R()],e.prototype,"raster",void 0),I([R({type:$e,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),I([R()],e.prototype,"rasterInfo",void 0),I([R()],e.prototype,"sourceJSON",void 0),I([R({readOnly:!0,type:W,json:{read:!1}})],e.prototype,"spatialReference",void 0),I([R({type:Z})],e.prototype,"tileInfo",void 0),I([R(lt)],e.prototype,"url",null),I([R({types:Ut,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const t=this.renderer?.type==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Vt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"renderer",null),I([It("renderer")],e.prototype,"readRenderer",null),I([R()],e.prototype,"symbolizer",void 0),e=I([Y("esri.layers.ImageryTileMixin")],e),e};function ji(r){const e=r.fields,s=r.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",i=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),n=i.map(c=>c.name),a=[];let o=0,l=0;return s.forEach(c=>{const u={};for(u[t]=o++,l=1;l<n.length;l++)u[n[l]]=c[l-1];a.push({attributes:u})}),{displayFieldName:"",fields:i,features:a}}class dt{static get supportedVersions(){return[5]}static parse(e){const s=new DataView(e),t=3&s.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const i=s.getUint32(4,!0),n=s.getUint16(8,!0),a=s.getUint16(10,!0),o={version:t,recordCount:i,headerByteCount:n,recordByteCount:a};let l=32;const c=[],u=[];let h;if(t===3){for(;s.getUint8(l)!==13;)h=String.fromCharCode(s.getUint8(l+11)).trim(),c.push({name:Xe(new Uint8Array(e,l,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:s.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<i&&e.byteLength-l>a;){const m=[];s.getUint8(l)===32?(l+=1,c.forEach(d=>{if(d.type==="C")m.push(Xe(new Uint8Array(e,l,d.length)).trim());else if(d.type==="N")m.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim(),10));else if(d.type==="F")m.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim()));else if(d.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,l,d.length)).trim();m.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}l+=d.length}),u.push(m)):l+=a}}return{header:o,fields:c,records:u,recordSet:ji({fields:c,records:u})}}}const ne=new Map;ne.set("int16","esriFieldTypeSmallInteger"),ne.set("int32","esriFieldTypeInteger"),ne.set("int64","esriFieldTypeInteger"),ne.set("float32","esriFieldTypeSingle"),ne.set("float64","esriFieldTypeDouble"),ne.set("text","esriFieldTypeString");const st=8;let de=class extends le{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:s}=await this.request(this.url+"/conf.json",{signal:e?.signal});if(!this._validateHeader(s))throw new C("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:i}=this._parseHeader(s);if(i.dataType==="thematic"){const n=await this._fetchAuxiliaryInformation();i.attributeTable=n}this._set("storageInfo",t),this._set("rasterInfo",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,s,t,i={}){const{transposeInfo:n}=this.rasterInfo.storageInfo,{transposedVariableName:a}=i,o=!(!n||!a),l=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(l<0)return null;const c=this._buildCacheFilePath(l,s,t,i.multidimensionalDefinition,a),u=this._getIndexRecordFromBundle(s,t,o),h=await this.request(c,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!h)return null;const m=new Uint8Array(h.data),d=this._getTileEndAndContentType(m,u);if(d.recordSize===0)return null;const p=await this.request(c,{range:{from:d.position,to:d.position+d.recordSize},responseType:"array-buffer",signal:i.signal});if(!p)return null;const[y,f]=this._getTileSize(o);return this.decodePixelBlock(p.data,{width:y,height:f,planes:null,pixelType:null,returnInterleaved:o})}_validateHeader(e){const s=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!s.some(t=>!e[t])}_parseHeader(e){const s=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:t,histograms:i,colormap:n,blockWidth:a,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,u=e.statistics&&e.statistics.map(B=>({min:B.min,max:B.max,avg:B.mean,stddev:B.standardDeviation,median:B.median,mode:B.mode})),h=e.extent.spatialReference,m=e.geodataXform?.spatialReference,d=new W(h?.wkid||h?.wkt?h:m);let p=new A({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:d});const y=new E({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:d}),f=Math.round((p.xmax-p.xmin)/y.x),g=Math.round((p.ymax-p.ymin)/y.y),w=this._parseTransform(e.geodataXform),x=w?p:null;w&&(p=w.forwardTransform(p),y.x=(p.xmax-p.xmin)/f,y.y=(p.ymax-p.ymin)/g);const v=e.properties??{},_=e.format.toLowerCase().replace("cache/",""),S=new E(e.origin.x,e.origin.y,d);let k,b,F,T;if(n&&n.colors)for(k=[],b=0;b<n.colors.length;b++)F=n.colors[b],T=n.values?n.values[b]:b,k.push([T,255&F,F<<16>>>24,F<<8>>>24,F>>>24]);const M=e.LODInfos,P=[];for(b=0;b<M.levels.length;b++)P.push(new ot({level:M.levels[b],resolution:M.resolutions[b],scale:96/.0254*M.resolutions[b]}));const $=new Z({dpi:96,lods:P,format:_,origin:S,size:[a,o],spatialReference:d}),z={recordSize:st,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*st+64},O=[{maxCol:Math.ceil(f/a)-1,maxRow:Math.ceil(g/o)-1,minCol:0,minRow:0}];let D=2;if(c>0)for(b=0;b<c;b++)O.push({maxCol:Math.ceil(f/D/a)-1,maxRow:Math.ceil(g/D/o)-1,minCol:0,minRow:0}),D*=2;const N=e.mdInfo;let q=null;if(N&&v._yxs){const B=v._yxs;q={packetSize:B.PacketSize,tileSize:[B.TileXSize,B.TileYSize]}}return{storageInfo:z,rasterInfo:new ge({width:f,height:g,pixelType:s,bandCount:t,extent:p,nativeExtent:x,transform:w,spatialReference:d,pixelSize:y,keyProperties:v,statistics:u,histograms:i,multidimensionalInfo:N,colormap:k,storageInfo:new ye({blockWidth:a,blockHeight:o,pyramidBlockWidth:a,pyramidBlockHeight:o,origin:S,tileInfo:$,transposeInfo:q,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:O})})}}_parseTransform(e){if(!Ci(e))throw new C("cloudraster:open","the data contains unsupported geodata transform types");const s=Pi(e);if(s.type==="identity")return null;if(s.type!=="polynomial"||!s.forwardCoefficients?.length||!s.inverseCoefficients?.length)throw new C("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return s}async _fetchAuxiliaryInformation(e){const s=this.request(this.url+"/conf.vat.json",{signal:e}).then(a=>a.data).catch(()=>null),t=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(a=>a.data).catch(()=>null),i=await Promise.all([s,t]);let n;if(i[0]){let a=i[0].fields;const o=i[0].values;if(a&&o){a=a.map(c=>({type:c.name==="OID"?"esriFieldTypeOID":ne.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));a&&o&&(n={fields:a,features:l})}}return!n&&i[1]&&(n=dt.parse(i[1]).recordSet),Je.fromJSON(n)}_buildCacheFilePath(e,s,t,i,n){const a=this._getPackageSize(!!n),o=Math.floor(s/a)*a,l=Math.floor(t/a)*a,c="R"+this._toHexString4(o)+"C"+this._toHexString4(l);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:h}=this.rasterInfo,m=i?.[0];if(h==null||!m)return`${this.url}/_alllayers/${u}/${c}.bundle`;let d="_yxs";if(!n){d=h.variables.find(f=>f.name===m.variableName).dimensions[0].values.indexOf(m.values[0]).toString(16);const y=4-d.length;for(let f=0;f<y;f++)d="0"+d;d="S"+d}const p=this._getVariableFolderName(n||m.variableName);return`${this.url}/_alllayers/${p}/${d}/${u}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:s}=this.rasterInfo.storageInfo;return e&&s!=null?s.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:s}=this.rasterInfo,{transposeInfo:t}=s;return e&&t!=null?t.tileSize:s.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,s,t=!1){const i=this._getPackageSize(t),n=i*(e%i)+s%i;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,s){const t=e.subarray(s,s+8);let i,n=0;for(i=0;i<5;i++)n|=(255&t[i])<<8*i;const a=0xffffffffff&n;for(n=0,i=5;i<8;i++)n|=(255&t[i])<<8*(i-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(e){let s=e.toString(16);if(s.length!==4){let t=4-s.length;for(;t-- >0;)s="0"+s}return s}};I([R({readOnly:!0})],de.prototype,"storageInfo",void 0),I([R({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),de=I([Y("esri.layers.support.rasterDatasets.CloudRaster")],de);const Ui=de;let me=class extends le{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){await this.init();const s=this.data,{pixelBlock:t,statistics:i,histograms:n,name:a,keyProperties:o,nativeExtent:l,transform:c}=this.data,{width:u,height:h,pixelType:m}=t,d=s.extent??new A({xmin:-.5,ymin:.5,xmax:u-.5,ymax:h-.5,spatialReference:new W({wkid:3857})}),p=s.isPseudoSpatialReference??!s.extent,y={x:d.width/u,y:d.height/h},f=new ge({width:u,height:h,pixelType:m,extent:d,nativeExtent:l,transform:c,pixelSize:y,spatialReference:d.spatialReference,bandCount:t.pixels.length,keyProperties:o||{},statistics:i,isPseudoSpatialReference:p,histograms:n});this.createRemoteDatasetStorageInfo(f,512,512),this._set("rasterInfo",f),this.updateTileInfo(),await this._buildInMemoryRaster(t,{width:512,height:512},e),this.datasetName=a,this.url="/InMemory/"+a}fetchRawTile(e,s,t,i={}){const n=this._pixelBlockTiles.get(`${e}/${s}/${t}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,s,t){const i=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:s,maximumPyramidLevel:i},t):Promise.resolve(di(e,s,i)),a=this.rasterInfo.statistics!=null,o=this.rasterInfo.histograms!=null,l=a?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},t):Promise.resolve(mi(e)),c=await ct([n,l]);if(!c[0].value&&c[1].value)throw new C("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=c[0].value,a||(this.rasterInfo.statistics=c[1].value?.statistics),o||(this.rasterInfo.histograms=c[1].value?.histograms)}};I([R({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),I([R()],me.prototype,"data",void 0),me=I([Y("esri.layers.support.rasterDatasets.InMemoryRaster")],me);const Vi=me;function he(r,e){if(!r||!e)return[];let s=e;e.includes("/")?(s=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const n=he(r,s);for(let a=0;a<n.length;a++)he(n[a],e).forEach(o=>t.push(o));return t}const i=r.getElementsByTagNameNS("*",s);if(!i||i.length===0)return[];for(let n=0;n<i.length;n++)t.push(i[n]||i.item(n));return t}function j(r,e){if(!r||!e)return null;let s=e;e.includes("/")?(s=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=he(r,s);return t.length>0?e?j(t[0],e):t[0]:null}function X(r,e=null){const s=e?j(r,e):r;let t;return s?(t=s.textContent||s.nodeValue,t?t.trim():null):null}function Xi(r,e){const s=he(r,e),t=[];let i;for(let n=0;n<s.length;n++)i=s[n].textContent||s[n].nodeValue,i&&(i=i.trim(),i!==""&&t.push(i));return t}function Ie(r,e){return Xi(r,e).map(s=>Number(s))}function oe(r,e){const s=X(r,e);return Number(s)}function Fe(r,e){const s=r?.nodeName?.toLowerCase(),t=e.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===t}function rt(r,e){if(!r||!e)return null;const s=[];for(let t=0;t<r.length;t++)s.push(r[t]),s.push(e[t]);return s}function Yi(r){const e=j(r,"GeodataXform"),s=Te(oe(e,"SpatialReference/WKID")||X(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:s,transform:null};const t=oe(e,"PolynomialOrder")??1,i=Ie(e,"CoeffX/Double"),n=Ie(e,"CoeffY/Double"),a=Ie(e,"InverseCoeffX/Double"),o=Ie(e,"InverseCoeffY/Double"),l=rt(i,n),c=rt(a,o);return{spatialReference:s,transform:l&&c&&l.length&&c.length?new Ae({spatialReference:s,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}function Ki(r){const e=oe(r,"NoDataValue"),s=j(r,"Histograms/HistItem"),t=oe(s,"HistMin"),i=oe(s,"HistMax"),n=oe(s,"BucketCount"),a=X(s,"HistCounts")?.split("|").map(m=>Number(m));let o,l,c,u;he(r,"Metadata/MDI").forEach(m=>{const d=Number(m.textContent??m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=d;break;case"STATISTICS_MAXIMUM":l=d;break;case"STATISTICS_MEAN":c=d;break;case"STATISTICS_STDDEV":u=d}});const h=oe(r,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a?.length&&t!=null&&i!=null?{min:t,max:i,size:n||a.length,counts:a}:null,sourceBandIndex:h,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:u}:null}}function Te(r){if(!r)return null;let e=Number(r);if(!isNaN(e)&&e!==0)return new W({wkid:e});if((r=String(r)).startsWith("COMPD_CS")){if(!r.includes("VERTCS")||!r.includes("GEOGCS")&&!r.startsWith("PROJCS"))return null;const s=r.indexOf("VERTCS"),t=r.indexOf("PROJCS"),i=t>-1?t:r.indexOf("GEOGCS");if(i===-1)return null;const n=r.slice(i,r.lastIndexOf("]",s)+1).trim(),a=r.slice(s,r.lastIndexOf("]")).trim();e=Me(n);const o=new W(e?{wkid:e}:{wkt:n}),l=Me(a);return l&&(o.vcsWkid=l),o}return r.startsWith("GEOGCS")||r.startsWith("PROJCS")?(e=Me(r),new W(e!==0?{wkid:e}:{wkt:r})):null}function Me(r){const e=r.replaceAll("]","[").replaceAll('"',"").split("[").map(i=>i.trim()).filter(i=>i!==""),s=e[e.length-1].split(","),t=s[0]?.toLowerCase();if((t==="epsg"||t==="esri")&&r.endsWith('"]]')){const i=Number(s[1]);if(!isNaN(i)&&i!==0)return i}return 0}function He(r){if(r?.documentElement.tagName?.toLowerCase()!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};r.documentElement.childNodes.forEach(t=>{if(t.nodeType===1){if(Fe(t,"SRS")){if(!e.spatialReference){const i=X(t);e.spatialReference=Te(i)}}else if(Fe(t,"Metadata"))if(t.getAttribute("domain")==="xml:ESRI"){const{spatialReference:i,transform:n}=Yi(t);e.transform=n,e.spatialReference||(e.spatialReference=i)}else he(t,"MDI").forEach(i=>e.metadata[i.getAttribute("key")]=X(i));else if(Fe(t,"PAMRasterBand")){const i=Ki(t);i.sourceBandIndex!=null&&e.rasterBands[i.sourceBandIndex]==null?e.rasterBands[i.sourceBandIndex]=i:e.rasterBands.push(i)}}});const s=e.rasterBands;if(s.length){const t=!!s[0].statistics;e.statistics=t?s.map(n=>n.statistics).filter(Pe):null;const i=!!s[0].histogram;e.histograms=i?s.map(n=>n.histogram).filter(Pe):null}return e}let Re=class extends le{async open(r){await this.init();const e=await this._fetchData(r);let{spatialReference:s,statistics:t,histograms:i,transform:n}=await this._fetchAuxiliaryData(r);const a=!s;a&&(s=new W({wkid:3857})),i?.length&&t==null&&(t=Ee(i));const{width:o,height:l}=e;let c=new A({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:s});const u=n?n.forwardTransform(c):c;let h=!0;if(n){const d=n.forwardCoefficients;h=d&&d[1]===0&&d[2]===0,h&&(n=null,c=u)}const m=new Vi({data:{extent:u,nativeExtent:c,transform:n,pixelBlock:e,statistics:t,histograms:i,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await m.open(),m.data=null,this._set("rasterInfo",m.rasterInfo),this._inMemoryRaster=m}fetchRawTile(r,e,s,t={}){return this._inMemoryRaster.fetchRawTile(r,e,s,t)}async _fetchData(r){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:r?.signal}),s=pi(e).toUpperCase();if(s!=="JPG"&&s!=="PNG"&&s!=="GIF"&&s!=="BMP")throw new C("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",s);const t=s.toLowerCase(),i=t==="gif"||t==="bmp"||!St("ios"),n=await this.decodePixelBlock(e,{format:t,useCanvas:i,hasNoZlibMask:!0});if(n==null)throw new C("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(r){const e=r?.signal,s=this.ioConfig.skipExtensions??[],t=s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),i=this.datasetFormat,n=i==="JPG"?"jgw":i==="PNG"?"pgw":i==="BMP"?"bpw":null,a=n&&s.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),o=await ct([t,a]);if(e?.aborted)throw Rt();const l=He(o[0].value?.data);if(!l.transform){const c=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(u=>Number(u)):null;l.transform=c?.length===6?new Ae({forwardCoefficients:[c[4],c[5],c[0],-c[1],c[2],-c[3]]}):null}return l}};I([R({type:String,json:{write:!0}})],Re.prototype,"datasetFormat",void 0),Re=I([Y("esri.layers.support.rasterDatasets.ImageAuxRaster")],Re);const be=Re;let pe=class extends le{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){await this.init();const s=e&&e.signal,t=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:s});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=t.data;if(this.sourceJSON=i,!i)throw new C("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new C("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(n.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=i.name?.slice(i.name.indexOf("/")+1)??"";const a=await this._fetchRasterInfo({signal:s});if(a==null)throw new C("image-server-raster:open","cannot initialize image service");const o=this.tileType==="Map"?Qi(i.tileInfo,i):Z.fromJSON(i.tileInfo);vt(o);const[l,c]=this._computeMinMaxLOD(a,o),{extent:u,pixelSize:h}=a,m=.5/a.width*h.x,d=Math.max(h.x,h.y),{lods:p}=o;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(h.x-h.y)>m||!p.some(b=>Math.abs(b.resolution-d)<m))&&(h.x=h.y=l.resolution,a.width=Math.ceil((u.xmax-u.xmin)/h.x-.1),a.height=Math.ceil((u.ymax-u.ymin)/h.y-.1));const y=l.level-c.level,[f,g]=o.size,w=[],x=[];p.forEach((b,F)=>{b.level>=c.level&&b.level<=l.level&&w.push({x:b.resolution,y:b.resolution}),F<p.length-1&&x.push(Math.round(10*b.resolution/p[F+1].resolution)/10)}),w.sort((b,F)=>b.x-F.x);const v=this.computeBlockBoundary(u,f,g,o.origin,w,y),_=w.length>1?w.slice(1):null;let S;i.transposeInfo&&(S={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:a.keyProperties?._yxs.PacketSize??0});const k=x.length<=1||x.length>=3&&x.slice(0,x.length-1).every(b=>b===x[0])?x[0]??2:Math.round(10/(c.resolution/l.resolution)**(-1/y))/10;if(a.storageInfo=new ye({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:_,pyramidScalingFactor:k,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:y,tileInfo:o,transposeInfo:S,blockBoundary:v}),this._fixGCSShift(a),this._set("rasterInfo",a),i.capabilities.toLowerCase().includes("tilemap")){const b={tileInfo:a.storageInfo.tileInfo,parsedUrl:Tt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Di({layer:b})}}async fetchRawTile(e,s,t,i={}){const{storageInfo:n,extent:a}=this.rasterInfo,{transposeInfo:o}=n,l=o!=null&&!!i.transposedVariableName;if(this._slices&&!l&&i.sliceId==null)return null;const c=l?0:n.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${c}/${s}/${t}`,h=this._slices?l?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:m}=await this.request(u,{query:h,responseType:"array-buffer",signal:i.signal});if(!m)return null;const d=l?o.tileSize:n.tileInfo.size,p=await this.decodePixelBlock(m,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:l,noDataValue:this.rasterInfo.noDataValue});if(p==null)return null;const y=n.blockBoundary[e];if(n.compression!=="jpg"||t>y.minCol&&t<y.maxCol&&s>y.minRow&&s<y.maxRow)return p;const{origin:f,blockWidth:g,blockHeight:w}=n,{x,y:v}=this.getPyramidPixelSize(e),_=Math.round((a.xmin-f.x)/x)%g,S=Math.round((a.xmax-f.x)/x)%g||g,k=Math.round((f.y-a.ymax)/v)%w,b=Math.round((f.y-a.ymin)/v)%w||w,F=t===y.minCol?_:0,T=s===y.minRow?k:0,M=t===y.maxCol?S:g,P=s===y.maxRow?b:w;return yi(p,{x:F,y:T},{width:M-F,height:P-T}),p}getSliceIndex(e){if(!this._slices||e==null||e.length===0)return null;const s=e;for(let t=0;t<this._slices.length;t++){const i=this._slices[t].multidimensionalDefinition;if(i.length===s.length&&!i.some(n=>{const a=s.find(o=>n.variableName===o.variableName&&o.dimensionName===n.dimensionName);return a?(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0]):!0}))return t}return null}async fetchVariableStatisticsHistograms(e,s){const t=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:s}).then(a=>a.data?.statistics),i=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:s}).then(a=>a.data?.histograms),n=await Promise.all([t,i]);return n[0]&&n[0].forEach(a=>{a.avg=a.mean,a.stddev=a.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,s={}){if(!this._tilemapCache)return 0;let t=this.identifyPixelLocation(e,0,s.datumTransformation);if(t===null)return null;let i=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let a=n-i+this._levelOffset;const o=t.srcLocation;for(;a>=0;){try{if(await this._tilemapCache.fetchAvailability(a,t.row,t.col,s)==="available")break}catch{}if(a--,i++,t=this.identifyPixelLocation(o,i,s.datumTransformation),t===null)return null}return a===-1||t==null?null:i}async _fetchRasterInfo(e){const s=this.sourceJSON;if(this.tileType==="Map"){const o=s.fullExtent||s.extent,l=Math.ceil((o.xmax-o.xmin)/s.pixelSizeX-.1),c=Math.ceil((o.ymax-o.ymin)/s.pixelSizeY-.1),u=W.fromJSON(s.spatialReference||o.spatialReference),h=new E({x:s.pixelSizeX,y:s.pixelSizeY,spatialReference:u});return new ge({width:l,height:c,bandCount:3,extent:A.fromJSON(o),spatialReference:u,pixelSize:h,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:t}=e,i=ii(this.url,this.sourceJSON,{signal:t,query:this.ioConfig.customFetchParameters}),n=s.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:t}).then(o=>o.data&&o.data.slices).catch(()=>null):null,a=await Promise.all([i,n]);return this._slices=a[1],a[0]}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:s,spatialReference:t}=e;s.xmin>-1&&s.xmax>181&&t?.wkid&&t.isGeographic&&(e.nativeExtent=e.extent,e.transform=new $i,e.extent=e.transform.forwardTransform(s))}_computeMinMaxLOD(e,s){const{pixelSize:t}=e,i=.5/e.width*t.x,{lods:n}=s,a=s.lodAt(Math.max.apply(null,n.map(d=>d.level))),o=s.lodAt(Math.min.apply(null,n.map(d=>d.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=n[0].level,[a,o];if(l==="Raster")return[n.find(d=>d.resolution===t.x)??a,o];const{minScale:c,maxScale:u}=this.sourceJSON;let h=a;u>0&&(h=n.find(d=>Math.abs(d.scale-u)<i),h||(h=n.filter(d=>d.scale>u).sort((d,p)=>d.scale>p.scale?1:-1)[0]??a));let m=o;return c>0&&(m=n.find(d=>Math.abs(d.scale-c)<i)??o,this._levelOffset=m.level-o.level),[h,m]}};function Qi(r,e){if(!r)return null;const{minScale:s,maxScale:t,minLOD:i,maxLOD:n}=e;if(i!=null&&n!=null)return Z.fromJSON({...r,lods:r.lods.filter(({level:a})=>a!=null&&a>=i&&a<=n)});if(s!==0&&t!==0){const a=c=>Math.round(1e4*c)/1e4,o=s?a(s):1/0,l=t?a(t):-1/0;return Z.fromJSON({...r,lods:r.lods.filter(c=>{const u=a(c.scale);return u<=o&&u>=l})})}return Z.fromJSON(r)}I([R({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),I([R()],pe.prototype,"tileType",void 0),pe=I([Y("esri.layers.support.rasterDatasets.ImageServerRaster")],pe);const Zi=pe,V=new Map;V.set("Int8","s8"),V.set("UInt8","u8"),V.set("Int16","s16"),V.set("UInt16","u16"),V.set("Int32","s32"),V.set("UInt32","u32"),V.set("Float32","f32"),V.set("Float64","f32"),V.set("Double64","f32");const te=new Map;te.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),te.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),te.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),te.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ce=class extends le{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(r){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=r?r.signal:null,s=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:i}=this._parseHeader(s.data);if(this.ioConfig.skipExtensions?.indexOf("aux.xml")===-1){const y=await this._fetchAuxiliaryData(r);y!=null&&(t.statistics=y.statistics??t.statistics,t.histograms=y.histograms,y.histograms&&t.statistics==null&&(t.statistics=Ee(y.histograms)))}this._set("rasterInfo",t),this._files=i;const n=await this.request(i.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:o}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:u}=this.rasterInfo,h=[],m=this._getBandSegmentCount();let d=0,p=-1;for(;d<this._storageIndex.length;){p++;const y=Math.ceil(c/a/l**p)-1,f=Math.ceil(u/o/l**p)-1;d+=(y+1)*(f+1)*m*4,h.push({maxRow:f,maxCol:y,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(r,e,s,t={}){const{blockWidth:i,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,o=a[r];if(!o||o.maxRow<e||o.maxCol<s||o.minRow>e||o.minCol>s)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:m}=this._getTileLocation(r,e,s);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const T=new Uint8Array(i*n);return new ee({width:i,height:n,pixels:null,mask:T,validPixelCount:0})}const{bandIds:d}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let f=0;for(f=0;f<p;f++)d&&!d.includes(f)||y.push(this.request(this._files.data,{range:{from:u[f].from,to:u[f].to},responseType:"array-buffer",signal:t.signal}));const g=await Promise.all(y),w=g.map(T=>T.data.byteLength).reduce((T,M)=>T+M),x=new Uint8Array(w);let v=0;for(f=0;f<p;f++)x.set(new Uint8Array(g[f].data),v),v+=g[f].data.byteLength;const _=te.get(this.rasterInfo.storageInfo.compression).decoderFormat,S=await this.decodePixelBlock(x.buffer,{width:i,height:n,format:_,planes:d?.length||l,pixelType:c});if(S==null)return null;let{noDataValue:k}=this.rasterInfo;if(k!=null&&_!=="lerc"&&!S.mask&&(k=k[0],k!=null)){const T=S.width*S.height,M=new Uint8Array(T);if(Math.abs(k)>1e24)for(f=0;f<T;f++)Math.abs((S.pixels[0][f]-k)/k)>1e-6&&(M[f]=1);else for(f=0;f<T;f++)S.pixels[0][f]!==k&&(M[f]=1);S.mask=M}let b=0,F=0;if(h!==i||m!==n){let T=S.mask;if(T)for(f=0;f<n;f++)if(F=f*i,f<m)for(b=h;b<i;b++)T[F+b]=0;else for(b=0;b<i;b++)T[F+b]=0;else for(T=new Uint8Array(i*n),S.mask=T,f=0;f<m;f++)for(F=f*i,b=0;b<h;b++)T[F+b]=1}return S}_parseIndex(r){if(r.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,s,t,i,n,a;if(gi){for(s=new Uint8Array(r),i=new ArrayBuffer(r.byteLength),t=new Uint8Array(i),n=0;n<r.byteLength/4;n++)for(a=0;a<4;a++)t[4*n+a]=s[4*n+3-a];e=new Uint32Array(i)}else e=new Uint32Array(r);return e}_getBandSegmentCount(){return te.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(r,e,s){const{blockWidth:t,blockHeight:i,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,h,m=0,d=0;for(h=0;h<r;h++)d=n**h,c=Math.ceil(a/t/d),u=Math.ceil(o/i/d),m+=c*u;d=n**r,c=Math.ceil(a/t/d),u=Math.ceil(o/i/d),m+=e*c+s,m*=4*l;const p=this._storageIndex.subarray(m,m+4*l);let y=0,f=0;const g=[];for(let w=0;w<l;w++)y=p[4*w]*2**32+p[4*w+1],f=y+p[4*w+2]*2**32+p[4*w+3],g.push({from:y,to:f});return{ranges:g,actualTileWidth:s<c-1?t:Math.ceil(a/d)-t*(c-1),actualTileHeight:e<u-1?i:Math.ceil(o/d)-i*(u-1)}}_parseHeader(r){const e=j(r,"MRF_META/Raster");if(!e)throw new C("mrf:open","not a valid MRF format");const s=j(e,"Size"),t=parseInt(s.getAttribute("x"),10),i=parseInt(s.getAttribute("y"),10),n=parseInt(s.getAttribute("c"),10),a=(X(e,"Compression")||"none").toLowerCase();if(!te.has(a))throw new C("mrf:open","currently does not support compression "+a);const o=X(e,"DataType")||"UInt8",l=V.get(o);if(l==null)throw new C("mrf:open","currently does not support pixel type "+o);const c=j(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),m=j(e,"DataValues");let d,p;if(m&&(p=m.getAttribute("NoData"),p!=null&&(d=p.trim().split(" ").map(M=>parseFloat(M)))),j(r,"MRF_META/CachedSource"))throw new C("mrf:open","currently does not support MRF referencing other data files");const y=j(r,"MRF_META/GeoTags"),f=j(y,"BoundingBox");let g,w=!1;if(f!=null){const M=parseFloat(f.getAttribute("minx")),P=parseFloat(f.getAttribute("miny")),$=parseFloat(f.getAttribute("maxx")),z=parseFloat(f.getAttribute("maxy")),O=X(y,"Projection")||"";let D=W.WGS84;if(O!=="LOCAL_CS[]")if(O.toLowerCase().startsWith("epsg:")){const N=Number(O.slice(5));isNaN(N)||N===0||(D=new W({wkid:N}))}else D=Te(O)??W.WGS84;else w=!0,D=new W({wkid:3857});g=new A(M,P,$,z),g.spatialReference=D}else w=!0,g=new A({xmin:-.5,ymin:.5-i,xmax:t-.5,ymax:.5,spatialReference:new W({wkid:3857})});const x=j(r,"MRF_META/Rsets"),v=parseInt(x&&x.getAttribute("scale")||"2",10),_=g.spatialReference,S=new ye({origin:new E({x:g.xmin,y:g.ymax,spatialReference:_}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:v}),k=new E({x:g.width/t,y:g.height/i,spatialReference:_}),b=new ge({width:t,height:i,extent:g,isPseudoSpatialReference:w,spatialReference:_,bandCount:n,pixelType:l,pixelSize:k,noDataValue:d,storageInfo:S}),F=X(r,"datafile"),T=X(r,"IndexFile");return{rasterInfo:b,files:{mrf:this.url,index:T||this.url.replace(".mrf",".idx"),data:F||this.url.replace(".mrf",te.get(a).blobExtension)}}}async _fetchAuxiliaryData(r){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:r?.signal});return He(e)}catch{return null}}};I([R()],ce.prototype,"_files",void 0),I([R()],ce.prototype,"_storageIndex",void 0),I([R({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),ce=I([Y("esri.layers.support.rasterIO.MRFRaster")],ce);const es=ce,Ce=(r,e)=>r.get(e)?.values,fe=(r,e)=>r.get(e)?.values?.[0];let ae=class extends le{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(r){await this.init();const e=r?r.signal:null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!s)throw new C("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:i,isBigTiff:n}=xi(s),a=[];await this._readIFDs(a,s,t,i,0,n?8:4,e);const{imageInfo:o,rasterInfo:l}=this._parseIFDs(a),c=wi(a),u=Ii(a);if(this._headerInfo={littleEndian:t,isBigTiff:n,ifds:a,pyramidIFDs:c,maskIFDs:u,...o},this._set("rasterInfo",l),!o.isSupported)throw new C("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new C("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const h=a[0].get("PREDICTOR")?.values?.[0];if(a[0].get("SAMPLEFORMAT")?.values?.[0]===3&&h===2)throw new C("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");const{skipExtensions:d=[]}=this.ioConfig;if(!d.includes("aux.xml")){const p=await this._fetchAuxiliaryMetaData(r);p!=null&&this._processPAMInfo(p,l)}d.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||(l.attributeTable=await this._fetchAuxiliaryTable(r),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(r,e,s,t={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(r,e,s))return null;const i=await this._fetchRawTiffTile(r,e,s,!1,t);if(i!=null&&this._headerInfo.hasMaskBand){const n=await this._fetchRawTiffTile(r,e,s,!0,t);n!=null&&n.pixels[0]instanceof Uint8Array&&(i.mask=n.pixels[0])}return i}_parseIFDs(r){const e=bi(r),{width:s,height:t,tileWidth:i,tileHeight:n,planes:a,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:m,tileBoundary:d,affine:p,metadata:y}=e,f=e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid;let g=Te(f),w=!!e.isPseudoGeographic;g==null&&(w=!0,g=new W({wkid:3857}));const x=new A({...e.extent,spatialReference:g}),v=new E(x?{x:x.xmin,y:x.ymax,spatialReference:g}:{x:0,y:0}),_=new ye({blockWidth:i,blockHeight:n,pyramidBlockWidth:h,pyramidBlockHeight:m,compression:l,origin:v,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:d}),S=new E({x:(x.xmax-x.xmin)/s,y:(x.ymax-x.ymin)/t,spatialReference:g}),k=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{};let b=null;const F=fe(r[0],"PHOTOMETRICINTERPRETATION"),T=Ce(r[0],"COLORMAP");if(F<=3&&T?.length>3&&T.length%3==0){b=[];const P=T.length/3;for(let $=0;$<P;$++)b.push([$,T[$]>>>8,T[$+P]>>>8,T[$+2*P]>>>8])}const M=new ge({width:s,height:t,bandCount:a,pixelType:o,pixelSize:S,storageInfo:_,spatialReference:g,isPseudoSpatialReference:w,keyProperties:k,extent:x,colormap:b,statistics:y?y.statistics:null});return p?.length&&(M.nativeExtent=new A({xmin:-.5,ymin:.5-t,xmax:s-.5,ymax:.5,spatialReference:g}),M.transform=new Ae({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new E({x:(x.xmax-x.xmin)/s,y:(x.ymax-x.ymin)/t,spatialReference:g}),_.origin.x=-.5,_.origin.y=.5),{imageInfo:e,rasterInfo:M}}_processPAMInfo(r,e){if(e.statistics=r.statistics??e.statistics,e.histograms=r.histograms,r.histograms&&e.statistics==null&&(e.statistics=Ee(r.histograms)),r.transform&&e.transform==null){e.transform=r.transform,e.nativeExtent=e.extent;const s=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new E({x:(s.xmax-s.xmin)/e.width,y:(s.ymax-s.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=s}e.isPseudoSpatialReference&&r.spatialReference&&(e.spatialReference=r.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}async _readIFDs(r,e,s,t,i,n=4,a){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+i,to:t+i+this._bufferSize},responseType:"array-buffer",signal:a})).data,i=t+i,t=0);const o=await this._readIFD(e,s,t,i,xe.TIFF_TAGS,n,a);if(r.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(r,e,s,o.nextIFD-i,i,n,a)}async _readIFD(r,e,s,t,i=xe.TIFF_TAGS,n=4,a){if(!r)return null;const o=Si(r,e,s,t,i,n);if(o.success){const l=[];if(o.ifd?.forEach(c=>{c.values||l.push(c)}),l.length>0){const c=l.map(h=>h.offlineOffsetSize).filter(Pe),u=Math.min.apply(null,c.map(h=>h[0]));if(Math.min.apply(null,c.map(h=>h[0]+h[1]))-u<=this._bufferSize){const{data:h}=await this.request(this.url,{range:{from:u,to:u+this._bufferSize},responseType:"array-buffer",signal:a});r=h,t=u,l.forEach(m=>Ri(r,e,m,t))}}if(o.ifd?.has("GEOKEYDIRECTORY")){const c=o.ifd.get("GEOKEYDIRECTORY"),u=c?.values;if(u&&u.length>4){const h=u[0]+"."+u[1]+"."+u[2],m=await this._readIFD(r,e,c.valueOffset+6-t,t,xe.GEO_KEYS,2,a);c.data=m.ifd,c.data&&c.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[h]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==r.byteLength)return(r=(await this.request(this.url,{range:{from:t,to:t+o.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<o.requiredBufferSize?null:this._readIFD(r,e,0,t,xe.TIFF_TAGS,4,a)}async _fetchRawTiffTile(r,e,s,t,i={}){const n=this._getTileLocation(r,e,s,t);if(!n)return null;const{ranges:a,actualTileWidth:o,actualTileHeight:l,ifd:c}=n,u=a.map(S=>this.request(this.url,{range:S,responseType:"array-buffer",signal:i.signal})),h=await Promise.all(u),m=h.map(S=>S.data.byteLength).reduce((S,k)=>S+k),d=h.length===1?h[0].data:new ArrayBuffer(m),p=[0],y=[0];if(h.length>1){const S=new Uint8Array(d);for(let k=0,b=0;k<h.length;k++){const F=h[k].data;S.set(new Uint8Array(F),b),p[k]=b,b+=F.byteLength,y[k]=F.byteLength}}const{blockWidth:f,blockHeight:g}=this.getBlockWidthHeight(r),w=await this.decodePixelBlock(d,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:y},width:f,height:g,planes:null,pixelType:null});if(w==null)return null;let x,v,_;if(o!==f||l!==g){let S=w.mask;if(S)for(x=0;x<g;x++)if(_=x*f,x<l)for(v=o;v<f;v++)S[_+v]=0;else for(v=0;v<f;v++)S[_+v]=0;else for(S=new Uint8Array(f*g),w.mask=S,x=0;x<l;x++)for(_=x*f,v=0;v<o;v++)S[_+v]=1}return w}_getTileLocation(r,e,s,t=!1){const{firstPyramidLevel:i,blockBoundary:n}=this.rasterInfo.storageInfo,a=r===0?0:r-(i-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[a]:a===0?o?.ifds[0]:o?.pyramidIFDs[a-1];if(!l)return null;const c=vi(l,o),u=Ce(l,"TILEOFFSETS");if(u===void 0)return null;const h=Ce(l,"TILEBYTECOUNTS"),{minRow:m,minCol:d,maxRow:p,maxCol:y}=n[a];if(e>p||s>y||e<m||s<d)return null;const f=fe(l,"IMAGEWIDTH"),g=fe(l,"IMAGELENGTH"),w=fe(l,"TILEWIDTH"),x=fe(l,"TILELENGTH"),v=[];if(c){const{bandCount:_}=this.rasterInfo;for(let S=0;S<_;S++){const k=S*(p+1)*(y+1)+e*(y+1)+s;v[S]={from:u[k],to:u[k]+h[k]-1}}}else{const _=e*(y+1)+s;v.push({from:u[_],to:u[_]+h[_]-1})}for(let _=0;_<v.length;_++)if(v[_].from==null||!v[_].to)return null;return{ranges:v,ifd:l,actualTileWidth:s===y&&f%w||w,actualTileHeight:e===p&&g%x||x}}async _fetchAuxiliaryMetaData(r){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:r?.signal});return He(e)}catch{return null}}async _fetchAuxiliaryTable(r){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:r?.signal}),s=dt.parse(e);return s?.recordSet?Je.fromJSON(s.recordSet):null}catch{return null}}};I([R()],ae.prototype,"_files",void 0),I([R()],ae.prototype,"_headerInfo",void 0),I([R()],ae.prototype,"_bufferSize",void 0),I([R({type:String,json:{write:!0}})],ae.prototype,"datasetFormat",void 0),ae=I([Y("esri.layers.support.rasterDatasets.TIFFRaster")],ae);const ts=ae,L=new Map;L.set("CRF",{desc:"Cloud Raster Format",constructor:Ui}),L.set("MRF",{desc:"Meta Raster Format",constructor:es}),L.set("TIFF",{desc:"GeoTIFF",constructor:ts}),L.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Zi}),L.set("JPG",{desc:"JPG Raster Format",constructor:be}),L.set("PNG",{desc:"PNG Raster Format",constructor:be}),L.set("GIF",{desc:"GIF Raster Format",constructor:be}),L.set("BMP",{desc:"BMP Raster Format",constructor:be});class is{static get supportedFormats(){const e=new Set;return L.forEach((s,t)=>e.add(t)),e}static async open(e){const{url:s,ioConfig:t,sourceJSON:i}=e;let n=e.datasetFormat;n==null&&s.lastIndexOf(".")&&(n=s.slice(s.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),s.toLowerCase().includes("/imageserver")&&!s.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:s,sourceJSON:i,datasetFormat:n,ioConfig:t??{bandIds:null,sampling:null}};let o,l;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!t?.enableCRF)throw new C("rasterfactory:open",`cannot open raster: ${s}`);return o=L.get(n).constructor,l=new o(a),await l.open({signal:e.signal}),l}if(n)throw new C("rasterfactory:open","not a supported format "+n);const c=Array.from(L.keys());let u=0;const h=()=>(n=c[u++],n&&(n!=="CRF"||t?.enableCRF)?(o=L.get(n).constructor,l=new o(a),l.open({signal:e.signal}).then(()=>l).catch(()=>h())):null);return h()}static register(e,s,t){L.has(e.toUpperCase())||L.set(e.toUpperCase(),{desc:s,constructor:t})}}let J=class extends _t(kt(Ft(Mt(Ct(Gi(Pt($t(Ot(Dt(Lt)))))))))){constructor(...r){super(...r),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}load(r){const e=r!=null?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},r).catch(Bt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const r=[new ue({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ue({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:e}=this,s=e?.attributeTable,t=s!=null?s.fields:null,i="Raster.";if(t){const o=t.filter(l=>l.type!=="oid"&&l.name.toLowerCase()!=="value").map(l=>{const c=l.clone();return c.name=i+l.name,c});r.push(...o)}const n=e?.dataType,a=e?.multidimensionalInfo;if((n==="vector-magdir"||n==="vector-uv")&&a!=null){const o=a.variables[0].unit?.trim(),l="Magnitude"+(o?` (${o})`:"");r.push(new ue({name:"Raster.Magnitude",alias:l,domain:null,editable:!1,type:"double"})),r.push(new ue({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return r}createPopupTemplate(r){const{rasterFields:e}=this,s=new Set(e.map(({name:t})=>t).filter(t=>t.toLowerCase()!=="raster.servicepixelvalue.raw"));return Nt({fields:e,title:this.title},{...r,visibleFieldNames:s})}async generateRasterInfo(r,e){if(!(r=ze($e,r)))return this.rasterInfo;try{const s={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(n=>s[n.url]=n);const t=De(r.functionDefinition?.toJSON()??r.toJSON(),s),i=new Be({rasterFunction:t});return await i.open(e),i.rasterInfo}catch(s){throw s instanceof C?s:new C("imagery-tile-layer","the given raster function is not supported")}}write(r,e){const s=this._primaryRasters[0]??this.raster;if(this.loaded?s.datasetFormat==="RasterTileServer"&&(s.tileType==="Raster"||s.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(r,e);if(e&&e.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new C("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(r){let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,i=[this.url];t&&Oi(t.toJSON(),i);const n=await Promise.all(i.map(o=>is.open({url:o,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:r}))),a=n.findIndex(o=>o==null);if(a>-1)throw new C("imagery-tile-layer:open",`cannot open raster: ${i[a]}`);if(this._primaryRasters=n,t){const o={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(u=>o[u.url]=u);const l=De(t.functionDefinition?.toJSON()??t.toJSON(),o),c=new Be({rasterFunction:l});try{await c.open(),this.raster=c}catch(u){const h=Ne.getLogger(this);u instanceof C&&h.error("imagery-tile-layer:open",u.message),h.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=n[0]}}else this.raster=n[0]}const s=this.raster.rasterInfo;if(!s)throw new C("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?s:this._primaryRasters[0].rasterInfo),this._set("spatialReference",s.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}else this.read({tileInfo:this.rasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(zt(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}};I([R()],J.prototype,"_primaryRasters",void 0),I([R({type:[Jt],json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.bandIds?.join(",")!=="0,1,2"}}}}})],J.prototype,"bandIds",void 0),I([R({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Et(si)],J.prototype,"interpolation",void 0),I([R(At)],J.prototype,"legendEnabled",void 0),I([R({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],J.prototype,"isReference",void 0),I([R({type:["show","hide"]})],J.prototype,"listMode",void 0),I([R({json:{read:!0,write:!0}})],J.prototype,"blendMode",void 0),I([R()],J.prototype,"sourceJSON",void 0),I([R({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],J.prototype,"version",void 0),I([R({readOnly:!0,json:{read:!1}})],J.prototype,"type",void 0),I([R({type:["ArcGISTiledImageServiceLayer"]})],J.prototype,"operationalLayerType",void 0),I([R({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(r,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(r,e,s){e[s]=!r}}}})],J.prototype,"popupEnabled",void 0),I([R({type:Ht,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],J.prototype,"popupTemplate",void 0),I([R({readOnly:!0})],J.prototype,"defaultPopupTemplate",null),I([R({readOnly:!0,type:[ue]})],J.prototype,"fields",void 0),I([R({readOnly:!0,type:[ue]})],J.prototype,"rasterFields",null),J=I([Y("esri.layers.ImageryTileLayer")],J);const xs=J;export{xs as default};
